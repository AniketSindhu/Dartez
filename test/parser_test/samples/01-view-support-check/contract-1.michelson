parameter (or
            (or
              (or (pair %add_inflation (nat %epoch) (nat %value))
                  (pair %balance_of (list %requests (pair (address %owner) (nat %token_id)))
                                    (contract %callback (list (pair
                                                              (pair %request (address %owner)
                                                                             (nat %token_id))
                                                              (nat %balance))))))
              (or (pair %claim_inflation (nat %token_id) (list %epochs nat))
                  (or
                    (pair %create_lock (address %user_address) (pair (nat %base_value) (nat %end)))
                    (pair %increase_lock_end (nat %token_id) (nat %end)))))
            (or
              (or (pair %increase_lock_value (nat %token_id) (nat %value))
                  (or (address %set_voter)
                      (list %transfer (pair (address %from_)
                                           (list %txs (pair (address %to_)
                                                           (pair (nat %token_id) (nat %amount))))))))
              (or
                (pair %update_attachments
                  (list %attachments (or (nat %add_attachment) (nat %remove_attachment)))
                  (address %owner))
                (or
                  (list %update_operators (or
                                           (pair %add_operator (address %owner)
                                                               (pair (address %operator)
                                                                     (nat %token_id)))
                                           (pair %remove_operator (address %owner)
                                                                  (pair (address %operator)
                                                                        (nat %token_id)))))
                  (nat %withdraw)))));
storage (pair
          (pair
            (pair (pair (big_map %attached nat address) (address %base_token))
                  (pair (big_map %claim_ledger (pair (nat %token_id) (nat %epoch)) unit)
                        (big_map %epoch_inflation nat nat)))
            (pair
              (pair (nat %gc_index)
                    (big_map %global_checkpoints nat
                                                 (pair (nat %slope) (pair (nat %bias) (nat %ts)))))
              (pair (big_map %ledger (pair address nat) nat) (nat %locked_supply))))
          (pair
            (pair
              (pair (big_map %locks nat (pair (nat %base_value) (nat %end)))
                    (big_map %metadata string bytes))
              (pair (big_map %num_token_checkpoints nat nat)
                    (big_map %operators
                      (pair (address %owner) (pair (address %operator) (nat %token_id)))
                      unit)))
            (pair
              (pair (big_map %slope_changes nat nat)
                    (big_map %token_checkpoints (pair nat nat)
                                                (pair (nat %slope) (pair (nat %bias) (nat %ts)))))
              (pair (nat %uid) (address %voter)))));
view "get_locked_supply" unit nat { CDR ; CAR ; GET 6 };
view "get_token_voting_power" (pair (nat %time) (pair (nat %token_id) (nat %ts))) nat
      { UNPAIR ;
        PUSH nat 604800 ;
        PUSH nat 0 ;
        DUP 3 ;
        CAR ;
        COMPARE ;
        EQ ;
        IF { DROP ; PUSH nat 1 } {} ;
        DUP ;
        DUP ;
        DUG 2 ;
        DUP 4 ;
        GET 4 ;
        EDIV ;
        IF_NONE { PUSH int 782 ; FAILWITH } { CAR } ;
        MUL ;
        PUSH nat 0 ;
        DUP 4 ;
        CAR ;
        COMPARE ;
        EQ ;
        IF { PUSH bool True } { PUSH nat 1 ; DUP 4 ; CAR ; COMPARE ; EQ } ;
        IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
        DUP 4 ;
        GET 3 ;
        CAR ;
        CAR ;
        DUP 4 ;
        GET 3 ;
        MEM ;
        IF {} { PUSH string "LOCK_DOES_NOT_EXIST" ; FAILWITH } ;
        DUP 4 ;
        GET 5 ;
        CDR ;
        PUSH nat 1 ;
        DUP 5 ;
        GET 3 ;
        PAIR ;
        GET ;
        IF_NONE { PUSH int 787 ; FAILWITH } {} ;
        GET 4 ;
        SWAP ;
        DUP ;
        DUG 2 ;
        COMPARE ;
        GE ;
        IF {} { PUSH string "TOO_EARLY_TIMESTAMP" ; FAILWITH } ;
        DUP 4 ;
        GET 3 ;
        GET 3 ;
        DUP 4 ;
        GET 3 ;
        GET ;
        IF_NONE { PUSH int 790 ; FAILWITH } {} ;
        DUP 5 ;
        GET 5 ;
        CDR ;
        SWAP ;
        DUP ;
        DUG 2 ;
        DUP 6 ;
        GET 3 ;
        PAIR ;
        GET ;
        IF_NONE { PUSH int 791 ; FAILWITH } {} ;
        DUP ;
        GET 4 ;
        DUP 4 ;
        COMPARE ;
        GE ;
        IF
          { SWAP ;
            DROP ;
            DIG 2 ;
            DROP ;
            DIG 2 ;
            DROP ;
            DIG 2 ;
            DROP ;
            PUSH nat 1000000000000000000 ;
            SWAP ;
            DUP ;
            CAR ;
            SWAP ;
            DUP ;
            DUG 3 ;
            GET 4 ;
            DIG 4 ;
            SUB ;
            ISNAT ;
            IF_NONE { PUSH int 796 ; FAILWITH } {} ;
            MUL ;
            EDIV ;
            IF_NONE { PUSH int 796 ; FAILWITH } { CAR } ;
            SWAP ;
            GET 3 ;
            SUB ;
            DUP ;
            PUSH int 0 ;
            COMPARE ;
            GT ;
            IF { DROP ; PUSH nat 0 } { ISNAT ; IF_NONE { PUSH int 800 ; FAILWITH } {} } }
          { PUSH nat 2 ;
            DUP 3 ;
            SUB ;
            ISNAT ;
            IF_NONE { PUSH int 802 ; FAILWITH } {} ;
            PUSH nat 0 ;
            PUSH nat 0 ;
            DUP 3 ;
            DUP 3 ;
            COMPARE ;
            LT ;
            IF
              { DUP 6 ;
                DUP 10 ;
                GET 5 ;
                CDR ;
                PUSH nat 1 ;
                DUP 4 ;
                ADD ;
                DUP 11 ;
                GET 3 ;
                PAIR ;
                GET ;
                IF_NONE { PUSH int 807 ; FAILWITH } {} ;
                GET 4 ;
                COMPARE ;
                NEQ }
              { PUSH bool False } ;
            LOOP { DROP ;
                   PUSH nat 2 ;
                   PUSH nat 1 ;
                   DUP 4 ;
                   DUP 4 ;
                   ADD ;
                   ADD ;
                   EDIV ;
                   IF_NONE { PUSH int 809 ; FAILWITH } { CAR } ;
                   DUP 6 ;
                   DUP 10 ;
                   GET 5 ;
                   CDR ;
                   PUSH nat 1 ;
                   DUP 4 ;
                   ADD ;
                   DUP 11 ;
                   GET 3 ;
                   PAIR ;
                   GET ;
                   IF_NONE { PUSH int 810 ; FAILWITH } {} ;
                   GET 4 ;
                   COMPARE ;
                   LT ;
                   IF
                     { SWAP ; DROP ; DUP }
                     { DIG 2 ;
                       DROP ;
                       DUP ;
                       PUSH nat 1 ;
                       SWAP ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 813 ; FAILWITH } {} ;
                       DUG 2 } ;
                   DUP 3 ;
                   DUP 3 ;
                   COMPARE ;
                   LT ;
                   IF
                     { DUP 6 ;
                       DUP 10 ;
                       GET 5 ;
                       CDR ;
                       PUSH nat 1 ;
                       DUP 4 ;
                       ADD ;
                       DUP 11 ;
                       GET 3 ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH int 807 ; FAILWITH } {} ;
                       GET 4 ;
                       COMPARE ;
                       NEQ }
                     { PUSH bool False } } ;
            DUP 6 ;
            DUP 10 ;
            GET 5 ;
            CDR ;
            PUSH nat 1 ;
            DUP 4 ;
            ADD ;
            DUP 11 ;
            GET 3 ;
            PAIR ;
            GET ;
            IF_NONE { PUSH int 815 ; FAILWITH } {} ;
            GET 4 ;
            COMPARE ;
            EQ ;
            IF
              { SWAP ;
                DROP ;
                SWAP ;
                DROP ;
                SWAP ;
                DROP ;
                SWAP ;
                DROP ;
                SWAP ;
                DROP ;
                SWAP ;
                DROP ;
                DIG 2 ;
                GET 5 ;
                CDR ;
                PUSH nat 1 ;
                DIG 2 ;
                ADD ;
                DIG 2 ;
                GET 3 ;
                PAIR ;
                GET ;
                IF_NONE { PUSH int 816 ; FAILWITH } {} ;
                GET 3 }
              { DROP ;
                SWAP ;
                DROP ;
                SWAP ;
                DROP ;
                SWAP ;
                DROP ;
                DIG 2 ;
                DROP ;
                DIG 3 ;
                GET 5 ;
                CDR ;
                PUSH nat 1 ;
                DIG 2 ;
                ADD ;
                DIG 3 ;
                GET 3 ;
                PAIR ;
                GET ;
                IF_NONE { PUSH int 818 ; FAILWITH } {} ;
                PUSH nat 1000000000000000000 ;
                SWAP ;
                DUP ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                GET 4 ;
                DIG 4 ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH int 822 ; FAILWITH } {} ;
                MUL ;
                EDIV ;
                IF_NONE { PUSH int 822 ; FAILWITH } { CAR } ;
                SWAP ;
                GET 3 ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH int 822 ; FAILWITH } {} } } };
view "get_total_voting_power" (pair (nat %time) (nat %ts)) nat
      { UNPAIR ;
        PUSH nat 604800 ;
        PUSH nat 0 ;
        DUP 3 ;
        CAR ;
        COMPARE ;
        EQ ;
        IF { DROP ; PUSH nat 1 } {} ;
        DUP ;
        DUP ;
        DUG 2 ;
        DUP 4 ;
        CDR ;
        EDIV ;
        IF_NONE { PUSH int 838 ; FAILWITH } { CAR } ;
        MUL ;
        PUSH nat 0 ;
        DUP 4 ;
        CAR ;
        COMPARE ;
        EQ ;
        IF { PUSH bool True } { PUSH nat 1 ; DUP 4 ; CAR ; COMPARE ; EQ } ;
        IF {} { PUSH string "INVALID_TIME" ; FAILWITH } ;
        DUP 4 ;
        CAR ;
        GET 3 ;
        CDR ;
        PUSH nat 1 ;
        GET ;
        IF_NONE { PUSH int 842 ; FAILWITH } {} ;
        GET 4 ;
        SWAP ;
        DUP ;
        DUG 2 ;
        COMPARE ;
        GE ;
        IF {} { PUSH string "TOO_EARLY_TIMESTAMP" ; FAILWITH } ;
        DIG 3 ;
        DUP ;
        CAR ;
        GET 3 ;
        CDR ;
        SWAP ;
        DUP ;
        DUG 5 ;
        CAR ;
        GET 3 ;
        CAR ;
        GET ;
        IF_NONE { PUSH int 845 ; FAILWITH } {} ;
        DUP ;
        GET 4 ;
        DUP 3 ;
        COMPARE ;
        LT ;
        IF
          { PUSH nat 2 ;
            DUP 6 ;
            CAR ;
            GET 3 ;
            CAR ;
            SUB ;
            ISNAT ;
            IF_NONE { PUSH int 849 ; FAILWITH } {} ;
            PUSH nat 0 ;
            PUSH nat 0 ;
            DUP 3 ;
            DUP 3 ;
            COMPARE ;
            LT ;
            IF
              { DUP 5 ;
                DUP 9 ;
                CAR ;
                GET 3 ;
                CDR ;
                PUSH nat 1 ;
                DUP 4 ;
                ADD ;
                GET ;
                IF_NONE { PUSH int 853 ; FAILWITH } {} ;
                GET 4 ;
                COMPARE ;
                NEQ }
              { PUSH bool False } ;
            LOOP { DROP ;
                   PUSH nat 2 ;
                   PUSH nat 1 ;
                   DUP 4 ;
                   DUP 4 ;
                   ADD ;
                   ADD ;
                   EDIV ;
                   IF_NONE { PUSH int 854 ; FAILWITH } { CAR } ;
                   DUP 5 ;
                   DUP 9 ;
                   CAR ;
                   GET 3 ;
                   CDR ;
                   PUSH nat 1 ;
                   DUP 4 ;
                   ADD ;
                   GET ;
                   IF_NONE { PUSH int 855 ; FAILWITH } {} ;
                   GET 4 ;
                   COMPARE ;
                   LT ;
                   IF
                     { SWAP ; DROP ; DUP }
                     { DIG 2 ;
                       DROP ;
                       DUP ;
                       PUSH nat 1 ;
                       SWAP ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 858 ; FAILWITH } {} ;
                       DUG 2 } ;
                   DUP 3 ;
                   DUP 3 ;
                   COMPARE ;
                   LT ;
                   IF
                     { DUP 5 ;
                       DUP 9 ;
                       CAR ;
                       GET 3 ;
                       CDR ;
                       PUSH nat 1 ;
                       DUP 4 ;
                       ADD ;
                       GET ;
                       IF_NONE { PUSH int 853 ; FAILWITH } {} ;
                       GET 4 ;
                       COMPARE ;
                       NEQ }
                     { PUSH bool False } } ;
            DIG 3 ;
            DROP ;
            DUP 4 ;
            DUP 8 ;
            CAR ;
            GET 3 ;
            CDR ;
            PUSH nat 1 ;
            DUP 4 ;
            ADD ;
            GET ;
            IF_NONE { PUSH int 859 ; FAILWITH } {} ;
            GET 4 ;
            COMPARE ;
            EQ ;
            IF
              { SWAP ;
                DROP ;
                SWAP ;
                DROP ;
                DUP 5 ;
                CAR ;
                GET 3 ;
                CDR ;
                PUSH nat 1 ;
                DIG 2 ;
                ADD ;
                GET ;
                IF_NONE { PUSH int 860 ; FAILWITH } {} }
              { DROP ;
                SWAP ;
                DROP ;
                DUP 5 ;
                CAR ;
                GET 3 ;
                CDR ;
                PUSH nat 1 ;
                DIG 2 ;
                ADD ;
                GET ;
                IF_NONE { PUSH int 862 ; FAILWITH } {} } }
          {} ;
        DUP ;
        GET 3 ;
        SWAP ;
        DUP ;
        DUG 2 ;
        CAR ;
        PUSH nat 604800 ;
        DUP ;
        DUP ;
        DUP 6 ;
        GET 4 ;
        ADD ;
        EDIV ;
        IF_NONE { PUSH int 868 ; FAILWITH } { CAR } ;
        MUL ;
        DUP 4 ;
        GET 4 ;
        DUP 6 ;
        DUP 3 ;
        COMPARE ;
        LT ;
        IF
          { DUP 6 ;
            DUP 3 ;
            COMPARE ;
            LT ;
            IF { PUSH nat 0 ; DUP 5 ; COMPARE ; NEQ } { PUSH bool False } ;
            LOOP { PUSH nat 1000000000000000000 ;
                   DUP 4 ;
                   DIG 2 ;
                   DUP 4 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 874 ; FAILWITH } {} ;
                   MUL ;
                   EDIV ;
                   IF_NONE { PUSH int 875 ; FAILWITH } { CAR } ;
                   DIG 3 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 875 ; FAILWITH } {} ;
                   DUG 2 ;
                   DUP 8 ;
                   GET 5 ;
                   CAR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH nat 0 } {} ;
                   DIG 2 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 878 ; FAILWITH } {} ;
                   SWAP ;
                   DUP ;
                   PUSH nat 604800 ;
                   DIG 2 ;
                   ADD ;
                   SWAP ;
                   DUP 6 ;
                   DUP 3 ;
                   COMPARE ;
                   LT ;
                   IF { PUSH nat 0 ; DUP 5 ; COMPARE ; NEQ } { PUSH bool False } } }
          {} ;
        PUSH nat 0 ;
        DUP 5 ;
        COMPARE ;
        NEQ ;
        IF
          { SWAP ;
            DROP ;
            DIG 3 ;
            DROP ;
            DIG 4 ;
            DROP ;
            DIG 4 ;
            DROP ;
            DIG 4 ;
            DROP ;
            PUSH nat 1000000000000000000 ;
            DUG 2 ;
            DIG 4 ;
            SUB ;
            ISNAT ;
            IF_NONE { PUSH int 885 ; FAILWITH } {} ;
            MUL ;
            EDIV ;
            IF_NONE { PUSH int 886 ; FAILWITH } { CAR } ;
            SWAP ;
            SUB ;
            ISNAT ;
            IF_NONE { PUSH int 886 ; FAILWITH } {} }
          { DROP 3 ; SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP } };
view "is_owner" (pair (address %address) (nat %token_id)) bool
      { UNPAIR ;
        PUSH nat 1 ;
        DIG 2 ;
        CAR ;
        GET 5 ;
        DIG 2 ;
        GET ;
        IF_NONE { PUSH nat 0 } {} ;
        COMPARE ;
        NEQ ;
        IF { PUSH bool False } { PUSH bool True } };
code { LAMBDA
         (pair (pair (pair (pair nat (pair nat nat)) nat) (pair (pair nat (pair nat nat)) nat))
               (pair
                 (pair
                   (pair (pair (big_map nat address) address)
                         (pair (big_map (pair nat nat) unit) (big_map nat nat)))
                   (pair (pair nat (big_map nat (pair nat (pair nat nat))))
                         (pair (big_map (pair address nat) nat) nat)))
                 (pair
                   (pair (pair (big_map nat (pair nat nat)) (big_map string bytes))
                         (pair (big_map nat nat) (big_map (pair address (pair address nat)) unit)))
                   (pair (pair (big_map nat nat) (big_map (pair nat nat) (pair nat (pair nat nat))))
                         (pair nat address)))))
         (pair unit
               (pair
                 (pair
                   (pair (pair (big_map nat address) address)
                         (pair (big_map (pair nat nat) unit) (big_map nat nat)))
                   (pair (pair nat (big_map nat (pair nat (pair nat nat))))
                         (pair (big_map (pair address nat) nat) nat)))
                 (pair
                   (pair (pair (big_map nat (pair nat nat)) (big_map string bytes))
                         (pair (big_map nat nat) (big_map (pair address (pair address nat)) unit)))
                   (pair (pair (big_map nat nat) (big_map (pair nat nat) (pair nat (pair nat nat))))
                         (pair nat address)))))
         { UNPAIR ;
           PUSH timestamp "1970-01-01T00:00:00Z" ;
           NOW ;
           SUB ;
           ISNAT ;
           IF_NONE { PUSH int 377 ; FAILWITH } {} ;
           PUSH nat 0 ;
           DUP 4 ;
           CAR ;
           GET 3 ;
           CAR ;
           COMPARE ;
           EQ ;
           IF
             { DIG 2 ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               UNPAIR ;
               DUP 7 ;
               CAR ;
               CAR ;
               CAR ;
               SOME ;
               DUP 8 ;
               CAR ;
               CDR ;
               UPDATE ;
               PAIR ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUP ;
               DUG 3 ;
               UNPAIR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               UNPAIR ;
               SWAP ;
               DIG 5 ;
               DIG 6 ;
               DUP ;
               CAR ;
               CAR ;
               GET 3 ;
               SWAP ;
               CAR ;
               CAR ;
               CAR ;
               PAIR 3 ;
               SOME ;
               PUSH nat 1 ;
               DIG 7 ;
               CAR ;
               GET 3 ;
               CAR ;
               ADD ;
               UPDATE ;
               SWAP ;
               PUSH nat 1 ;
               ADD ;
               PAIR ;
               PAIR ;
               SWAP ;
               PAIR ;
               PAIR }
             { DIG 2 ;
               DUP ;
               CAR ;
               GET 3 ;
               CDR ;
               SWAP ;
               DUP ;
               DUG 4 ;
               CAR ;
               GET 3 ;
               CAR ;
               GET ;
               IF_NONE { PUSH int 389 ; FAILWITH } {} ;
               DUP ;
               GET 3 ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               PUSH nat 604800 ;
               DUP ;
               DUP ;
               DUP 6 ;
               GET 4 ;
               ADD ;
               EDIV ;
               IF_NONE { PUSH int 395 ; FAILWITH } { CAR } ;
               MUL ;
               DUP 4 ;
               GET 4 ;
               DUP 6 ;
               DUP 3 ;
               COMPARE ;
               LT ;
               IF
                 { DUP 6 ;
                   DUP 3 ;
                   COMPARE ;
                   LT ;
                   IF { PUSH nat 0 ; DUP 5 ; COMPARE ; NEQ } { PUSH bool False } ;
                   LOOP { PUSH nat 1000000000000000000 ;
                          DUP 4 ;
                          DIG 2 ;
                          DUP 4 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 400 ; FAILWITH } {} ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH int 401 ; FAILWITH } { CAR } ;
                          DIG 3 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 401 ; FAILWITH } {} ;
                          DUG 2 ;
                          DUP 7 ;
                          GET 5 ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { PUSH nat 0 } {} ;
                          DIG 2 ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 404 ; FAILWITH } {} ;
                          SWAP ;
                          DUP ;
                          PUSH nat 604800 ;
                          DIG 2 ;
                          ADD ;
                          SWAP ;
                          DUP 6 ;
                          DUP 3 ;
                          COMPARE ;
                          LT ;
                          IF { PUSH nat 0 ; DUP 5 ; COMPARE ; NEQ } { PUSH bool False } } }
                 {} ;
               PUSH nat 0 ;
               DUP 5 ;
               COMPARE ;
               NEQ ;
               IF
                 { SWAP ;
                   DROP ;
                   DIG 3 ;
                   DROP ;
                   PUSH nat 1000000000000000000 ;
                   DUP 3 ;
                   DIG 2 ;
                   DUP 6 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 411 ; FAILWITH } {} ;
                   MUL ;
                   EDIV ;
                   IF_NONE { PUSH int 412 ; FAILWITH } { CAR } ;
                   DIG 2 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 412 ; FAILWITH } {} ;
                   SWAP }
                 { DROP 2 ; DIG 2 ; DROP } ;
               PUSH nat 0 ;
               DUP 5 ;
               GET 3 ;
               CAR ;
               COMPARE ;
               NEQ ;
               IF
                 { PUSH nat 1000000000000000000 ;
                   DUP 5 ;
                   GET 3 ;
                   GET 4 ;
                   DUP 5 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 417 ; FAILWITH } {} ;
                   DUP 6 ;
                   GET 3 ;
                   CAR ;
                   MUL ;
                   EDIV ;
                   IF_NONE { PUSH int 417 ; FAILWITH } { CAR } ;
                   DUP 5 ;
                   GET 3 ;
                   GET 3 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 416 ; FAILWITH } {} ;
                   DIG 2 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 419 ; FAILWITH } {} ;
                   SWAP ;
                   DUP 4 ;
                   GET 3 ;
                   CAR ;
                   SWAP ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 420 ; FAILWITH } {} }
                 {} ;
               PUSH nat 0 ;
               DUP 5 ;
               GET 4 ;
               COMPARE ;
               NEQ ;
               IF
                 { DUP 5 ;
                   UNPAIR ;
                   SWAP ;
                   UNPAIR ;
                   SWAP ;
                   UNPAIR ;
                   UNPAIR ;
                   DUP 9 ;
                   GET 3 ;
                   CAR ;
                   DIG 10 ;
                   GET 5 ;
                   CAR ;
                   DUP 11 ;
                   GET 4 ;
                   GET ;
                   IF_NONE { PUSH int 424 ; FAILWITH } {} ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 423 ; FAILWITH } {} ;
                   SOME ;
                   DUP 10 ;
                   GET 4 ;
                   UPDATE ;
                   PAIR ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   DUG 4 }
                 {} ;
               DUP 4 ;
               CAR ;
               CAR ;
               GET 3 ;
               DIG 2 ;
               ADD ;
               SWAP ;
               DUP 4 ;
               CAR ;
               CAR ;
               CAR ;
               ADD ;
               DUP 5 ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               UNPAIR ;
               DUP 9 ;
               CAR ;
               CAR ;
               CAR ;
               DIG 10 ;
               GET 5 ;
               CAR ;
               DUP 11 ;
               CAR ;
               CDR ;
               GET ;
               IF_NONE { PUSH nat 0 } {} ;
               ADD ;
               SOME ;
               DIG 9 ;
               CAR ;
               CDR ;
               UPDATE ;
               PAIR ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUP ;
               DUG 4 ;
               UNPAIR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               UNPAIR ;
               SWAP ;
               DIG 7 ;
               DIG 7 ;
               DIG 7 ;
               PAIR 3 ;
               SOME ;
               PUSH nat 1 ;
               DIG 7 ;
               CAR ;
               GET 3 ;
               CAR ;
               ADD ;
               UPDATE ;
               SWAP ;
               PUSH nat 1 ;
               ADD ;
               PAIR ;
               PAIR ;
               SWAP ;
               PAIR ;
               PAIR } ;
           UNIT ;
           PAIR } ;
       SWAP ;
       UNPAIR ;
       IF_LEFT
         { IF_LEFT
             { IF_LEFT
                 { DIG 2 ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET 8 ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                   SWAP ;
                   UNPAIR ;
                   UNPAIR ;
                   UNPAIR ;
                   SWAP ;
                   UNPAIR ;
                   SWAP ;
                   DUP 6 ;
                   CDR ;
                   SOME ;
                   DUP 7 ;
                   CAR ;
                   UPDATE ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   UNPAIR ;
                   SWAP ;
                   UNPAIR ;
                   SWAP ;
                   DIG 5 ;
                   CDR ;
                   ADD ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   PAIR ;
                   NIL operation }
                 { PUSH mutez 0 ;
                   AMOUNT ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ" ; FAILWITH } ;
                   NIL (pair (pair address nat) nat) ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   ITER { DUP 4 ;
                          GET 3 ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          MEM ;
                          IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                          SWAP ;
                          DUP 4 ;
                          CAR ;
                          GET 5 ;
                          DIG 2 ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { PUSH nat 0 } {} ;
                          DIG 2 ;
                          PAIR ;
                          CONS } ;
                   DIG 3 ;
                   DROP ;
                   NIL operation ;
                   DIG 2 ;
                   CDR ;
                   PUSH mutez 0 ;
                   DIG 3 ;
                   TRANSFER_TOKENS ;
                   CONS } }
             { IF_LEFT
                 { PUSH mutez 0 ;
                   AMOUNT ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ" ; FAILWITH } ;
                   PUSH nat 1 ;
                   DUP 3 ;
                   CAR ;
                   GET 5 ;
                   DUP 3 ;
                   CAR ;
                   SENDER ;
                   PAIR ;
                   GET ;
                   IF_NONE { PUSH nat 0 } {} ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                   PUSH nat 0 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   ITER { DUP 4 ;
                          CAR ;
                          CAR ;
                          GET 3 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          DUP 5 ;
                          CAR ;
                          PAIR ;
                          MEM ;
                          IF { PUSH string "ALREADY_CLAIMED_INFLATION" ; FAILWITH } {} ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          GET 4 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          MEM ;
                          IF {} { PUSH string "INFLATION_NOT_ADDED" ; FAILWITH } ;
                          PUSH nat 604800 ;
                          DUP 5 ;
                          GET 8 ;
                          DUP 3 ;
                          VIEW "get_epoch_end" nat ;
                          IF_NONE { PUSH string "INVALID_VIEW" ; FAILWITH } {} ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH int 739 ; FAILWITH } {} ;
                          DUP ;
                          SELF_ADDRESS ;
                          SWAP ;
                          PUSH nat 1 ;
                          PAIR ;
                          VIEW "get_total_voting_power" nat ;
                          IF_NONE { PUSH string "INVALID_VIEW" ; FAILWITH } {} ;
                          DUP 6 ;
                          CAR ;
                          CAR ;
                          GET 4 ;
                          DUP 4 ;
                          GET ;
                          IF_NONE { PUSH int 758 ; FAILWITH } {} ;
                          SELF_ADDRESS ;
                          DIG 3 ;
                          DUP 7 ;
                          CAR ;
                          PUSH nat 1 ;
                          PAIR 3 ;
                          VIEW "get_token_voting_power" nat ;
                          IF_NONE { PUSH string "INVALID_VIEW" ; FAILWITH } {} ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH int 758 ; FAILWITH } { CAR } ;
                          DIG 2 ;
                          ADD ;
                          SWAP ;
                          DIG 3 ;
                          UNPAIR ;
                          UNPAIR ;
                          UNPAIR ;
                          SWAP ;
                          UNPAIR ;
                          PUSH (option unit) (Some Unit) ;
                          DIG 6 ;
                          DUP 9 ;
                          CAR ;
                          PAIR ;
                          UPDATE ;
                          PAIR ;
                          SWAP ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DUG 2 } ;
                   DIG 3 ;
                   DROP ;
                   NIL operation ;
                   SELF %increase_lock_value ;
                   PUSH mutez 0 ;
                   DIG 3 ;
                   DIG 4 ;
                   CAR ;
                   PAIR ;
                   TRANSFER_TOKENS ;
                   CONS }
                 { IF_LEFT
                     { PUSH mutez 0 ;
                       AMOUNT ;
                       COMPARE ;
                       EQ ;
                       IF {} { PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ" ; FAILWITH } ;
                       PUSH timestamp "1970-01-01T00:00:00Z" ;
                       NOW ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 450 ; FAILWITH } {} ;
                       PUSH nat 604800 ;
                       DUP ;
                       DUP 4 ;
                       GET 4 ;
                       EDIV ;
                       IF_NONE { PUSH int 453 ; FAILWITH } { CAR } ;
                       MUL ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH string "INVALID_LOCK_TIME" ; FAILWITH } {} ;
                       DUP ;
                       PUSH nat 604800 ;
                       SWAP ;
                       COMPARE ;
                       GE ;
                       IF { DUP ; PUSH nat 125798400 ; SWAP ; COMPARE ; LE } { PUSH bool False } ;
                       IF {} { PUSH string "INVALID_LOCK_TIME" ; FAILWITH } ;
                       DUP ;
                       PUSH nat 125798400 ;
                       SWAP ;
                       DUP 6 ;
                       GET 3 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 462 ; FAILWITH } { CAR } ;
                       DIG 5 ;
                       DUP ;
                       GET 7 ;
                       PUSH nat 1 ;
                       ADD ;
                       UPDATE 7 ;
                       DUP ;
                       DUG 6 ;
                       GET 7 ;
                       DIG 6 ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH (option nat) (Some 1) ;
                       DUP 7 ;
                       DUP 13 ;
                       CAR ;
                       PAIR ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       UNPAIR ;
                       DIG 8 ;
                       DUP 11 ;
                       GET 3 ;
                       PAIR ;
                       SOME ;
                       DUP 7 ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH (option nat) (Some 1) ;
                       DUP 7 ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       DIG 8 ;
                       DUP 8 ;
                       DIG 9 ;
                       PUSH nat 1000000000000000000 ;
                       DIG 10 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 463 ; FAILWITH } { CAR } ;
                       PAIR 3 ;
                       SOME ;
                       PUSH nat 1 ;
                       DUP 8 ;
                       PAIR ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       DUG 2 ;
                       DIG 3 ;
                       PUSH nat 0 ;
                       DUP ;
                       DUP ;
                       DUP ;
                       PAIR 3 ;
                       PAIR ;
                       DUP 5 ;
                       GET 3 ;
                       CAR ;
                       CAR ;
                       DUP 4 ;
                       GET ;
                       IF_NONE { PUSH int 496 ; FAILWITH } {} ;
                       CDR ;
                       DUP 6 ;
                       GET 5 ;
                       CDR ;
                       PUSH nat 1 ;
                       DIG 5 ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH int 490 ; FAILWITH } {} ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       DIG 3 ;
                       DIG 2 ;
                       PAIR ;
                       EXEC ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       GET 3 ;
                       PUSH nat 0 ;
                       COMPARE ;
                       LT ;
                       IF
                         { NIL operation ;
                           DUP 3 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           CONTRACT %transfer (pair (address %from)
                                                    (pair (address %to) (nat %value))) ;
                           IF_NONE { PUSH int 16 ; FAILWITH } {} ;
                           PUSH mutez 0 ;
                           DUP 4 ;
                           GET 3 ;
                           SELF_ADDRESS ;
                           SENDER ;
                           PAIR 3 ;
                           TRANSFER_TOKENS ;
                           CONS }
                         { NIL operation } ;
                       DIG 2 ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DIG 6 ;
                       GET 3 ;
                       ADD ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP }
                     { PUSH mutez 0 ;
                       AMOUNT ;
                       COMPARE ;
                       EQ ;
                       IF {} { PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ" ; FAILWITH } ;
                       PUSH timestamp "1970-01-01T00:00:00Z" ;
                       NOW ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 644 ; FAILWITH } {} ;
                       PUSH nat 604800 ;
                       DUP ;
                       DUP 4 ;
                       CDR ;
                       EDIV ;
                       IF_NONE { PUSH int 647 ; FAILWITH } { CAR } ;
                       MUL ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH string "INVALID_LOCK_TIME" ; FAILWITH } {} ;
                       DUP 5 ;
                       GET 3 ;
                       CAR ;
                       CAR ;
                       DUP 5 ;
                       CAR ;
                       MEM ;
                       IF {} { PUSH string "LOCK_DOES_NOT_EXIST" ; FAILWITH } ;
                       DUP 5 ;
                       GET 3 ;
                       CAR ;
                       CAR ;
                       DUP 5 ;
                       CAR ;
                       GET ;
                       IF_NONE { PUSH int 656 ; FAILWITH } {} ;
                       PUSH nat 1 ;
                       DUP 7 ;
                       CAR ;
                       GET 5 ;
                       DUP 7 ;
                       CAR ;
                       SENDER ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH int 659 ; FAILWITH } {} ;
                       COMPARE ;
                       EQ ;
                       IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                       DUP 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       COMPARE ;
                       GT ;
                       IF {} { PUSH string "LOCK_HAS_EXPIRED" ; FAILWITH } ;
                       DUP ;
                       CDR ;
                       DUP 4 ;
                       COMPARE ;
                       GT ;
                       IF { PUSH nat 125798400 ; DUP 3 ; COMPARE ; LE } { PUSH bool False } ;
                       IF {} { PUSH string "INVALID_INCREASE_END_TIMESTAMP" ; FAILWITH } ;
                       PUSH nat 125798400 ;
                       DUP 3 ;
                       DUP 3 ;
                       CAR ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 664 ; FAILWITH } { CAR } ;
                       DIG 6 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       UNPAIR ;
                       DUP ;
                       DUP 12 ;
                       CAR ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 668 ; FAILWITH } {} ;
                       DUP 11 ;
                       UPDATE 2 ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       UNPAIR ;
                       DUP ;
                       DUP 12 ;
                       CAR ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 671 ; FAILWITH } {} ;
                       PUSH nat 1 ;
                       ADD ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       DUP ;
                       DUG 7 ;
                       GET 3 ;
                       GET 3 ;
                       DUP 7 ;
                       CAR ;
                       GET ;
                       IF_NONE { PUSH int 674 ; FAILWITH } {} ;
                       DIG 7 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       DIG 10 ;
                       DUP 8 ;
                       DIG 10 ;
                       PUSH nat 1000000000000000000 ;
                       DIG 10 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 665 ; FAILWITH } { CAR } ;
                       PAIR 3 ;
                       SOME ;
                       DUP 7 ;
                       DUP 11 ;
                       CAR ;
                       PAIR ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       DUG 4 ;
                       DIG 5 ;
                       DIG 2 ;
                       CDR ;
                       DUP 6 ;
                       GET 5 ;
                       CDR ;
                       PUSH nat 1 ;
                       DUP 5 ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 684 ; FAILWITH } {} ;
                       DUP 7 ;
                       CAR ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH int 684 ; FAILWITH } {} ;
                       PAIR ;
                       DIG 3 ;
                       DUP 6 ;
                       GET 5 ;
                       CDR ;
                       DIG 4 ;
                       DIG 5 ;
                       CAR ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH int 685 ; FAILWITH } {} ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       DUG 2 ;
                       PAIR ;
                       EXEC ;
                       CDR ;
                       NIL operation } } } }
         { IF_LEFT
             { IF_LEFT
                 { PUSH mutez 0 ;
                   AMOUNT ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ" ; FAILWITH } ;
                   PUSH timestamp "1970-01-01T00:00:00Z" ;
                   NOW ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 561 ; FAILWITH } {} ;
                   DUP 3 ;
                   GET 3 ;
                   CAR ;
                   CAR ;
                   DUP 3 ;
                   CAR ;
                   MEM ;
                   IF {} { PUSH string "LOCK_DOES_NOT_EXIST" ; FAILWITH } ;
                   DUP 3 ;
                   GET 3 ;
                   CAR ;
                   CAR ;
                   DUP 3 ;
                   CAR ;
                   GET ;
                   IF_NONE { PUSH int 567 ; FAILWITH } {} ;
                   SELF_ADDRESS ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF
                     { PUSH bool True }
                     { PUSH nat 1 ;
                       DUP 5 ;
                       CAR ;
                       GET 5 ;
                       DUP 5 ;
                       CAR ;
                       SENDER ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH nat 0 } {} ;
                       COMPARE ;
                       EQ } ;
                   IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                   SELF_ADDRESS ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF
                     { PUSH bool True }
                     { SWAP ; DUP ; DUG 2 ; SWAP ; DUP ; DUG 2 ; CDR ; COMPARE ; GT } ;
                   IF {} { PUSH string "LOCK_HAS_EXPIRED" ; FAILWITH } ;
                   PUSH nat 0 ;
                   DUP 4 ;
                   CDR ;
                   COMPARE ;
                   GT ;
                   IF {} { PUSH string "INVALID_INCREASE_VALUE" ; FAILWITH } ;
                   DIG 3 ;
                   UNPAIR ;
                   SWAP ;
                   UNPAIR ;
                   UNPAIR ;
                   UNPAIR ;
                   DUP ;
                   DUP 9 ;
                   CAR ;
                   DUP ;
                   DUG 2 ;
                   GET ;
                   IF_NONE { PUSH int 578 ; FAILWITH } {} ;
                   DUP ;
                   CAR ;
                   DUP 11 ;
                   CDR ;
                   ADD ;
                   UPDATE 1 ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   SWAP ;
                   PAIR ;
                   DUG 3 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   COMPARE ;
                   GT ;
                   IF
                     { DUP 4 ;
                       GET 3 ;
                       GET 3 ;
                       DUP 4 ;
                       CAR ;
                       GET ;
                       IF_NONE { PUSH int 583 ; FAILWITH } {} ;
                       DUP 5 ;
                       GET 5 ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP 6 ;
                       CAR ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH int 584 ; FAILWITH } {} ;
                       DUP 4 ;
                       DUP 4 ;
                       CDR ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 588 ; FAILWITH } {} ;
                       DUP ;
                       PUSH nat 125798400 ;
                       SWAP ;
                       DUP 8 ;
                       CDR ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 591 ; FAILWITH } { CAR } ;
                       PUSH nat 1000000000000000000 ;
                       DUP 4 ;
                       GET 4 ;
                       DUP 8 ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 585 ; FAILWITH } {} ;
                       DUP 5 ;
                       CAR ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 585 ; FAILWITH } { CAR } ;
                       DIG 3 ;
                       GET 3 ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 585 ; FAILWITH } {} ;
                       ADD ;
                       DIG 6 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       DIG 9 ;
                       DUP 7 ;
                       DIG 8 ;
                       PUSH nat 1000000000000000000 ;
                       DIG 9 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 595 ; FAILWITH } { CAR } ;
                       PAIR 3 ;
                       SOME ;
                       PUSH nat 1 ;
                       DIG 7 ;
                       ADD ;
                       DUP 9 ;
                       CAR ;
                       PAIR ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       DUP ;
                       DUP 8 ;
                       CAR ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 605 ; FAILWITH } {} ;
                       PUSH nat 1 ;
                       ADD ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       DUP ;
                       DUG 3 ;
                       GET 3 ;
                       GET 3 ;
                       DUP 3 ;
                       CAR ;
                       GET ;
                       IF_NONE { PUSH int 608 ; FAILWITH } {} ;
                       DIG 4 ;
                       DUP 3 ;
                       CDR ;
                       DUP 6 ;
                       GET 5 ;
                       CDR ;
                       PUSH nat 1 ;
                       DUP 5 ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 611 ; FAILWITH } {} ;
                       DUP 7 ;
                       CAR ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH int 611 ; FAILWITH } {} ;
                       PAIR ;
                       DIG 3 ;
                       CDR ;
                       DUP 6 ;
                       GET 5 ;
                       CDR ;
                       DIG 4 ;
                       DUP 6 ;
                       CAR ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH int 612 ; FAILWITH } {} ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       DIG 3 ;
                       DIG 2 ;
                       PAIR ;
                       EXEC ;
                       CDR ;
                       SWAP }
                     { DROP 2 ; DIG 2 ; DROP } ;
                   SELF_ADDRESS ;
                   SENDER ;
                   COMPARE ;
                   NEQ ;
                   IF
                     { DUP ;
                       CDR ;
                       PUSH nat 0 ;
                       COMPARE ;
                       LT ;
                       IF
                         { NIL operation ;
                           DUP 3 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           CONTRACT %transfer (pair (address %from)
                                                    (pair (address %to) (nat %value))) ;
                           IF_NONE { PUSH int 16 ; FAILWITH } {} ;
                           PUSH mutez 0 ;
                           DUP 4 ;
                           CDR ;
                           SELF_ADDRESS ;
                           SENDER ;
                           PAIR 3 ;
                           TRANSFER_TOKENS ;
                           CONS }
                         { NIL operation } ;
                       DIG 2 ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DIG 6 ;
                       CDR ;
                       ADD ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP }
                     { DROP ; NIL operation } }
                 { DIG 2 ;
                   DROP ;
                   IF_LEFT
                     { PUSH address "tz1RBkXZSiQb3fS7Sg3zbFdPMBFPJUNHdcFo" ;
                       DUP 3 ;
                       GET 8 ;
                       COMPARE ;
                       EQ ;
                       IF { UPDATE 8 } { DROP } }
                     { PUSH mutez 0 ;
                       AMOUNT ;
                       COMPARE ;
                       EQ ;
                       IF {} { PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ" ; FAILWITH } ;
                       DUP ;
                       ITER { DUP ;
                              CDR ;
                              ITER { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     SENDER ;
                                     COMPARE ;
                                     EQ ;
                                     IF
                                       { PUSH bool True }
                                       { DUP 4 ; GET 3 ; GET 4 ; SWAP ; DUP ; DUG 2 ; GET 3 ; SENDER ; DUP 5 ; CAR ; PAIR 3 ; MEM } ;
                                     IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                     DUP 4 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 3 ;
                                     MEM ;
                                     IF { PUSH string "LOCK_IS_ATTACHED" ; FAILWITH } {} ;
                                     DUP 4 ;
                                     GET 3 ;
                                     CAR ;
                                     CAR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 3 ;
                                     MEM ;
                                     IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                     DUP ;
                                     GET 4 ;
                                     PUSH nat 1 ;
                                     SWAP ;
                                     COMPARE ;
                                     GE ;
                                     IF
                                       { DUP ;
                                         GET 4 ;
                                         DUP 5 ;
                                         CAR ;
                                         GET 5 ;
                                         DUP 3 ;
                                         GET 3 ;
                                         DUP 5 ;
                                         CAR ;
                                         PAIR ;
                                         GET ;
                                         IF_NONE { PUSH int 255 ; FAILWITH } {} ;
                                         COMPARE ;
                                         GE ;
                                         IF
                                           {}
                                           { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                         DUP 4 ;
                                         UNPAIR ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         DUP 6 ;
                                         GET 4 ;
                                         DIG 9 ;
                                         CAR ;
                                         GET 5 ;
                                         DUP 8 ;
                                         GET 3 ;
                                         DUP 10 ;
                                         CAR ;
                                         PAIR ;
                                         GET ;
                                         IF_NONE { PUSH int 261 ; FAILWITH } {} ;
                                         SUB ;
                                         ISNAT ;
                                         IF_NONE { PUSH int 260 ; FAILWITH } {} ;
                                         SOME ;
                                         DUP 7 ;
                                         GET 3 ;
                                         DUP 9 ;
                                         CAR ;
                                         PAIR ;
                                         UPDATE ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         PAIR ;
                                         DUP ;
                                         DUG 4 ;
                                         UNPAIR ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         SWAP ;
                                         UNPAIR ;
                                         DUP 6 ;
                                         GET 4 ;
                                         DIG 9 ;
                                         CAR ;
                                         GET 5 ;
                                         DIG 7 ;
                                         DUP ;
                                         GET 3 ;
                                         SWAP ;
                                         DUP ;
                                         DUG 9 ;
                                         CAR ;
                                         PAIR ;
                                         GET ;
                                         IF_NONE { PUSH nat 0 } {} ;
                                         ADD ;
                                         SOME ;
                                         DIG 6 ;
                                         DUP ;
                                         GET 3 ;
                                         SWAP ;
                                         CAR ;
                                         PAIR ;
                                         UPDATE ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         SWAP ;
                                         PAIR ;
                                         PAIR ;
                                         DUG 2 }
                                       { DROP } } ;
                              DROP } ;
                       DROP } ;
                   NIL operation } }
             { IF_LEFT
                 { PUSH mutez 0 ;
                   AMOUNT ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ" ; FAILWITH } ;
                   DUP ;
                   CAR ;
                   ITER { DUP ;
                          IF_LEFT
                            { SWAP ;
                              DROP ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              MEM ;
                              IF { PUSH string "LOCK_IS_ATTACHED" ; FAILWITH } {} ;
                              PUSH nat 1 ;
                              DUP 4 ;
                              CAR ;
                              GET 5 ;
                              DUP 3 ;
                              DUP 5 ;
                              CDR ;
                              PAIR ;
                              GET ;
                              IF_NONE { PUSH nat 0 } {} ;
                              COMPARE ;
                              EQ ;
                              IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF
                                { PUSH bool True }
                                { DUP 3 ; GET 3 ; GET 4 ; SWAP ; DUP ; DUG 2 ; SENDER ; DUP 5 ; CDR ; PAIR 3 ; MEM } ;
                              IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                              DIG 2 ;
                              UNPAIR ;
                              UNPAIR ;
                              UNPAIR ;
                              UNPAIR ;
                              SENDER ;
                              SOME ;
                              DIG 6 ;
                              UPDATE ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { PUSH nat 1 ;
                              DUP 5 ;
                              CAR ;
                              GET 5 ;
                              DUP 3 ;
                              DUP 6 ;
                              CDR ;
                              PAIR ;
                              GET ;
                              IF_NONE { PUSH nat 0 } {} ;
                              COMPARE ;
                              EQ ;
                              IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 357 ; FAILWITH } {} ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                              DUP 3 ;
                              CDR ;
                              SENDER ;
                              COMPARE ;
                              EQ ;
                              IF
                                { PUSH bool True }
                                { DUP 4 ; GET 3 ; GET 4 ; SWAP ; DUP ; DUG 2 ; SENDER ; DUP 6 ; CDR ; PAIR 3 ; MEM } ;
                              IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              MEM ;
                              IF
                                { SWAP ;
                                  DROP ;
                                  DIG 2 ;
                                  UNPAIR ;
                                  UNPAIR ;
                                  UNPAIR ;
                                  UNPAIR ;
                                  NONE address ;
                                  DIG 6 ;
                                  UPDATE ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP }
                                { DROP 2 } } } ;
                   DROP ;
                   SWAP ;
                   DROP ;
                   NIL operation }
                 { IF_LEFT
                     { PUSH mutez 0 ;
                       AMOUNT ;
                       COMPARE ;
                       EQ ;
                       IF {} { PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ" ; FAILWITH } ;
                       DUP ;
                       ITER { IF_LEFT
                                { DUP ;
                                  CAR ;
                                  SENDER ;
                                  COMPARE ;
                                  EQ ;
                                  IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                  DIG 2 ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  SWAP ;
                                  PUSH (option unit) (Some Unit) ;
                                  DIG 6 ;
                                  UPDATE ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP }
                                { DUP ;
                                  CAR ;
                                  SENDER ;
                                  COMPARE ;
                                  EQ ;
                                  IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                  DIG 2 ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  UNPAIR ;
                                  SWAP ;
                                  UNPAIR ;
                                  SWAP ;
                                  NONE unit ;
                                  DIG 6 ;
                                  UPDATE ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP } } ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       NIL operation }
                     { DIG 2 ;
                       DROP ;
                       PUSH mutez 0 ;
                       AMOUNT ;
                       COMPARE ;
                       EQ ;
                       IF {} { PUSH string "ENTRYPOINT_DOES_NOT_ACCEPT_TEZ" ; FAILWITH } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 3 ;
                       CAR ;
                       CAR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {} { PUSH string "LOCK_DOES_NOT_EXIST" ; FAILWITH } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 3 ;
                       CAR ;
                       CAR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { PUSH int 527 ; FAILWITH } {} ;
                       PUSH nat 1 ;
                       DUP 4 ;
                       CAR ;
                       GET 5 ;
                       DUP 4 ;
                       SENDER ;
                       PAIR ;
                       GET ;
                       IF_NONE { PUSH nat 0 } {} ;
                       COMPARE ;
                       EQ ;
                       IF {} { PUSH string "NOT_AUTHORISED" ; FAILWITH } ;
                       DUP ;
                       CDR ;
                       PUSH timestamp "1970-01-01T00:00:00Z" ;
                       NOW ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 521 ; FAILWITH } {} ;
                       COMPARE ;
                       GT ;
                       IF {} { PUSH string "LOCK_YET_TO_EXPIRE" ; FAILWITH } ;
                       DUP 3 ;
                       CAR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       DUP 3 ;
                       MEM ;
                       IF { PUSH string "LOCK_IS_ATTACHED" ; FAILWITH } {} ;
                       DUP ;
                       CAR ;
                       PUSH nat 0 ;
                       COMPARE ;
                       LT ;
                       IF
                         { NIL operation ;
                           DUP 4 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           CONTRACT %transfer (pair (address %from)
                                                    (pair (address %to) (nat %value))) ;
                           IF_NONE { PUSH int 16 ; FAILWITH } {} ;
                           PUSH mutez 0 ;
                           DUP 4 ;
                           CAR ;
                           SENDER ;
                           SELF_ADDRESS ;
                           PAIR 3 ;
                           TRANSFER_TOKENS ;
                           CONS }
                         { NIL operation } ;
                       DUP 4 ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       CAR ;
                       DIG 5 ;
                       CAR ;
                       DIG 7 ;
                       CAR ;
                       GET 6 ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { PUSH int 545 ; FAILWITH } {} ;
                       SWAP ;
                       PUSH (option nat) (Some 0) ;
                       DUP 8 ;
                       SENDER ;
                       PAIR ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       UNPAIR ;
                       NONE (pair nat nat) ;
                       DIG 7 ;
                       UPDATE ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } } } } ;
       PAIR }