parameter (or (or (pair %add (nat %x) (nat %y)) (or (pair %divide (nat %x) (nat %y)) (nat %factorial))) (or (pair %multiply (nat %x) (nat %y)) (or (nat %square) (pair %subtract (int %x) (int %y))))); storage nat; code { CAR ; IF_LEFT { IF_LEFT { UNPAIR ; ADD } { IF_LEFT { UNPAIR ; EDIV ; IF_NONE { PUSH int 21 ; FAILWITH } { CAR } } { PUSH nat 1 ; SWAP ; PUSH nat 1 ; DUP 2 ; ADD ; PUSH nat 1 ; DUP ; DUP 3 ; COMPARE ; GT ; LOOP { DIG 3 ; DUP 2 ; SWAP ; MUL ; DUG 3 ; PUSH nat 1 ; ADD ; DUP ; DUP 3 ; COMPARE ; GT } ; DROP 3 } } } { IF_LEFT { UNPAIR ; MUL } { IF_LEFT { DUP ; MUL } { UNPAIR ; SUB ; ISNAT ; IF_NONE { PUSH int 17 ; FAILWITH } {} } } } ; NIL operation ; PAIR }