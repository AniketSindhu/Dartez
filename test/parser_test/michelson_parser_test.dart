@Timeout(const Duration(minutes: 10))
import 'dart:convert';
import 'dart:io';

import 'package:dartez/dartez.dart';
import 'package:dartez/michelson_parser/parser.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:glob/glob.dart';
import 'package:glob/list_local_fs.dart';
import 'package:path/path.dart' as path;

void main() {
  group("Michelson/Micheline snippet tests", () {
    test("convert a pair with a map", () {
      var result = Parser.parseMichelsonExpression("""Pair (Some "value") # demo
           { Elt "abc" (Pair 0 (Pair 0 # comment check
            (Pair 0 (Pair 0 (Pair 0 (Pair 0 0)))))); Elt "def" (Pair 0 (Pair 0 (Pair 0 (Pair 0 (Pair 0 (Pair 0 0)))))); Elt "ghi" (Pair 0 (Pair 0 (Pair 0 (Pair 0 (Pair 0 (Pair 0 0)))))); }""");
      expect(result,
          '{ "prim": "Pair", "args": [ { "prim": "Some", "args": [ { "string": "value" } ] }, [ { "prim": "Elt", "args": [ { "string": "abc" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "int": "0" } ] } ] } ] } ] } ] } ] } ] },{ "prim": "Elt", "args": [ { "string": "def" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "int": "0" } ] } ] } ] } ] } ] } ] } ] },{ "prim": "Elt", "args": [ { "string": "ghi" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "prim": "Pair", "args": [ { "int": "0" }, { "int": "0" } ] } ] } ] } ] } ] } ] } ] } ] ] }');
    });

    test("convert a map", () {
      var result = Parser.parseMichelsonExpression(
          '{Elt "btc-usd" (Pair "spsig1J5pAPREQCGiYwLofVwxEdUEpdvzoSSXW479S838XSKZj54wgqazZ8zYsAWwcLGpdJzVxyd9fygpWipzbfZGv4AhTpa5qP" (Pair 1591080000 (Pair 1591080060 (Pair 10090000000 (Pair 10092390000 (Pair 10088000000 (Pair 10092380000 3323367)))))));Elt "xtz-usd" (Pair "spsig1KqL61EMYdu8PWEeqTx4AVULDF5DxyXJcgMyVix7VV5XiNMM7AtHppYPpBDyDRYiwU5GmQdaHkLNRxB37oqQMgzvPyLEDM" (Pair 1591080000 (Pair 1591080060 (Pair 2971600 (Pair 2972300 (Pair 2969600 (Pair 2972300 428740000)))))));}');
      expect(result,
          '[ { "prim": "Elt", "args": [ { "string": "btc-usd" }, { "prim": "Pair", "args": [ { "string": "spsig1J5pAPREQCGiYwLofVwxEdUEpdvzoSSXW479S838XSKZj54wgqazZ8zYsAWwcLGpdJzVxyd9fygpWipzbfZGv4AhTpa5qP" }, { "prim": "Pair", "args": [ { "int": "1591080000" }, { "prim": "Pair", "args": [ { "int": "1591080060" }, { "prim": "Pair", "args": [ { "int": "10090000000" }, { "prim": "Pair", "args": [ { "int": "10092390000" }, { "prim": "Pair", "args": [ { "int": "10088000000" }, { "prim": "Pair", "args": [ { "int": "10092380000" }, { "int": "3323367" } ] } ] } ] } ] } ] } ] } ] } ] },{ "prim": "Elt", "args": [ { "string": "xtz-usd" }, { "prim": "Pair", "args": [ { "string": "spsig1KqL61EMYdu8PWEeqTx4AVULDF5DxyXJcgMyVix7VV5XiNMM7AtHppYPpBDyDRYiwU5GmQdaHkLNRxB37oqQMgzvPyLEDM" }, { "prim": "Pair", "args": [ { "int": "1591080000" }, { "prim": "Pair", "args": [ { "int": "1591080060" }, { "prim": "Pair", "args": [ { "int": "2971600" }, { "prim": "Pair", "args": [ { "int": "2972300" }, { "prim": "Pair", "args": [ { "int": "2969600" }, { "prim": "Pair", "args": [ { "int": "2972300" }, { "int": "428740000" } ] } ] } ] } ] } ] } ] } ] } ] } ]');
    });

    test('convert a map as part of params', () {
      var result = Parser.parseMichelsonExpression(
          'Left { Elt "xtz-btc" (Pair "spsig1Wd1evf5BGSqouVYsHu5aXRys6FgVxVs8JgAEB6ZyeeEmzVu3xK86KmNgR2QjTMyGDvrBRmimYuhgwgH5ZwkwWgEH9sz5v" (Pair "xtz-btc" (Pair 1590930900 (Pair 1590930960 (Pair 307 (Pair 307 (Pair 307 (Pair 307 255000000))))))));Elt "xtz-usd" (Pair "spsig1YncAhCisEzw7LCTQXG3aBbRuLoff2Q1MgxhbgdfAD4ZbMsEW83c5LKDf2PGqcsnouyxTmNpXQeGCWtoLxRpamjggPUoNd" (Pair "xtz-usd" (Pair 1590930960 (Pair 1590931020 (Pair 2930200 (Pair 2930200 (Pair 2929600 (Pair 2929600 58740000)))))))) }');
      expect(result,
          '{ "prim": "Left", "args": [ [ { "prim": "Elt", "args": [ { "string": "xtz-btc" }, { "prim": "Pair", "args": [ { "string": "spsig1Wd1evf5BGSqouVYsHu5aXRys6FgVxVs8JgAEB6ZyeeEmzVu3xK86KmNgR2QjTMyGDvrBRmimYuhgwgH5ZwkwWgEH9sz5v" }, { "prim": "Pair", "args": [ { "string": "xtz-btc" }, { "prim": "Pair", "args": [ { "int": "1590930900" }, { "prim": "Pair", "args": [ { "int": "1590930960" }, { "prim": "Pair", "args": [ { "int": "307" }, { "prim": "Pair", "args": [ { "int": "307" }, { "prim": "Pair", "args": [ { "int": "307" }, { "prim": "Pair", "args": [ { "int": "307" }, { "int": "255000000" } ] } ] } ] } ] } ] } ] } ] } ] } ] },{ "prim": "Elt", "args": [ { "string": "xtz-usd" }, { "prim": "Pair", "args": [ { "string": "spsig1YncAhCisEzw7LCTQXG3aBbRuLoff2Q1MgxhbgdfAD4ZbMsEW83c5LKDf2PGqcsnouyxTmNpXQeGCWtoLxRpamjggPUoNd" }, { "prim": "Pair", "args": [ { "string": "xtz-usd" }, { "prim": "Pair", "args": [ { "int": "1590930960" }, { "prim": "Pair", "args": [ { "int": "1590931020" }, { "prim": "Pair", "args": [ { "int": "2930200" }, { "prim": "Pair", "args": [ { "int": "2930200" }, { "prim": "Pair", "args": [ { "int": "2929600" }, { "prim": "Pair", "args": [ { "int": "2929600" }, { "int": "58740000" } ] } ] } ] } ] } ] } ] } ] } ] } ] } ] ] }');
    });
  });

  group("List in Michelson snippet tests", () {
    test("test 1", () {
      var result = Parser.parseMichelsonScript(
          """parameter (pair (list (pair (pair string bytes) string)) bool);storage (pair (pair (set %claims (pair (pair string bytes) string)) (string %contract_type)) (pair (big_map %metadata string bytes) (address %owner)));code { UNPAIR ; SWAP ; DUP ; DUG 2 ; CDR ; CDR ; SENDER ; COMPARE ; NEQ ; IF { PUSH string "Unauthorized." ; FAILWITH } {} ; PUSH mutez 0 ; AMOUNT ; COMPARE ; GT ; IF { PUSH string "Tez not accepted." ; FAILWITH } {} ; UNPAIR ; DUP 3 ; CDR ; CDR ; DUP 4 ; CDR ; CAR ; PAIR ; DUP 4 ; CAR ; CDR ; DIG 4 ; CAR ; CAR ; DIG 3 ; ITER { SWAP ; DUP 5 ; DIG 2 ; UPDATE } ; DIG 3 ; DROP ; PAIR ; PAIR ; NIL operation ; PAIR }""");
      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          Dartez.normalizePrimitiveRecordOrder(
              """[{"prim":"parameter","args":[{"prim":"pair","args":[{"prim":"list","args":[{"prim":"pair","args":[{"prim":"pair","args":[{"prim":"string"},{"prim":"bytes"}]},{"prim":"string"}]}]},{"prim":"bool"}]}]},{"prim":"storage","args":[{"prim":"pair","args":[{"prim":"pair","args":[{"prim":"set","annots":["%claims"],"args":[{"prim":"pair","args":[{"prim":"pair","args":[{"prim":"string"},{"prim":"bytes"}]},{"prim":"string"}]}]},{"prim":"string","annots":["%contract_type"]}]},{"prim":"pair","args":[{"prim":"big_map","annots":["%metadata"],"args":[{"prim":"string"},{"prim":"bytes"}]},{"prim":"address","annots":["%owner"]}]}]}]},{"prim":"code","args":[[{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"CDR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"NEQ"},{"prim":"IF","args":[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"Unauthorized."}]},{"prim":"FAILWITH"}],[]]},{"prim":"PUSH","args":[{"prim":"mutez"},{"int":"0"}]},{"prim":"AMOUNT"},{"prim":"COMPARE"},{"prim":"GT"},{"prim":"IF","args":[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"Tez not accepted."}]},{"prim":"FAILWITH"}],[]]},{"prim":"UNPAIR"},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CDR"},{"prim":"CDR"},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"CDR"},{"prim":"CAR"},{"prim":"PAIR"},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"4"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"ITER","args":[[{"prim":"SWAP"},{"prim":"DUP","args":[{"int":"5"}]},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"UPDATE"}]]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DROP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"PAIR"}]]}]"""));
    });

    test("test 2", () {
      var result = Parser.parseMichelsonScript(
          """parameter (or (or (or (map %airdrop nat (list (pair (nat %amount) (address %recipient)))) (or (pair %balance_of (list %requests (pair (address %owner) (nat %token_id))) (contract %callback (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) (list %burn (pair (address %from_) (pair (nat %token_id) (nat %amount)))))) (or (map %create_token string bytes) (or (pair %list_token (nat %token_id) (pair (timestamp %start_time) (pair (timestamp %end_time) (pair (mutez %price) (pair (nat %max_per_wallet) (pair (nat %airdrop_capacity) (pair %split (map %shares address nat) (nat %total)))))))) (nat %lock)))) (or (or (pair %mint (nat %amount) (nat %token_id)) (or (pair %mint_normal (nat %amount) (pair (address %to_) (nat %token_id))) (address %set_administrator))) (or (or (big_map %set_metadata string bytes) (list %transfer (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) (or (list %update_operators (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))) (list %update_token_metadata (pair (nat %token_id) (map %token_info string bytes)))))));storage (pair (pair (pair (address %administrator) (big_map %claimed (pair address nat) nat)) (pair (nat %last_token_id) (pair (big_map %ledger (pair address nat) nat) (big_map %locked nat unit)))) (pair (pair (big_map %metadata string bytes) (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit)) (pair (big_map %sales nat (pair (pair (nat %airdrop_capacity) (pair (timestamp %end_time) (nat %max_per_wallet))) (pair (mutez %price) (pair (pair %split (map %shares address nat) (nat %total)) (timestamp %start_time))))) (pair (big_map %supply nat nat) (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))));code { UNPAIR ; IF_LEFT { IF_LEFT { IF_LEFT { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ; DUP ; ITER { DUP 3 ; GET 5 ; SWAP ; DUP ; DUG 2 ; CAR ; MEM ; IF {} { PUSH string "OE_NO_SALE" ; FAILWITH } ; DUP ; CDR ; ITER { DUP 4 ; GET 5 ; DUP 3 ; CAR ; GET ; IF_NONE { PUSH int 193 ; FAILWITH } {} ; CAR ; CAR ; DUP 3 ; CAR ; DUP 3 ; CDR ; PAIR ; DUP 6 ; UNPAIR ; UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; DUP 8 ; CAR ; DIG 11 ; CAR ; GET 5 ; DUP 8 ; GET ; IF_NONE { PUSH nat 0 } {} ; ADD ; SOME ; DIG 6 ; UPDATE ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; PAIR ; DUP ; GET 7 ; DUP ; DUP 6 ; CAR ; DUP ; DUG 2 ; GET ; IF_NONE { PUSH int 199 ; FAILWITH } {} ; DUP 6 ; CAR ; ADD ; SOME ; SWAP ; UPDATE ; UPDATE 7 ; DUP ; GET 5 ; DUP ; DUP 6 ; CAR ; DUP ; DUG 2 ; GET ; IF_NONE { PUSH int 200 ; FAILWITH } {} ; UNPAIR ; CDR ; DIG 6 ; CAR ; DIG 6 ; SUB ; ISNAT ; IF_NONE { PUSH string "OE_AIRDROP_CAP_REACHED" ; FAILWITH } {} ; PAIR ; PAIR ; SOME ; SWAP ; UPDATE ; UPDATE 5 ; DUG 2 } ; DROP } ; DROP ; NIL operation } { IF_LEFT { NIL operation ; DUP ; DUP 3 ; CDR ; PUSH mutez 0 ; DUP 5 ; CAR ; MAP { DUP 7 ; GET 8 ; SWAP ; DUP ; DUG 2 ; CDR ; MEM ; IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ; DUP 7 ; CAR ; GET 5 ; SWAP ; DUP ; CDR ; SWAP ; DUP ; DUG 3 ; CAR ; PAIR ; GET ; IF_NONE { PUSH nat 0 } {} ; SWAP ; PAIR } ; DIG 4 ; DROP ; DIG 4 ; DROP ; TRANSFER_TOKENS ; CONS } { DUP ; ITER { DUP 3 ; GET 8 ; SWAP ; DUP ; DUG 2 ; GET 3 ; MEM ; IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ; DUP ; CAR ; SENDER ; COMPARE ; EQ ; IF { PUSH bool True } { DUP 3 ; GET 3 ; CDR ; SWAP ; DUP ; DUG 2 ; GET 3 ; SENDER ; DUP 4 ; CAR ; PAIR 3 ; MEM } ; IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ; DUP 3 ; UNPAIR ; UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; DUP 6 ; GET 4 ; DIG 8 ; CAR ; GET 5 ; DIG 7 ; DUP ; GET 3 ; SWAP ; DUP ; DUG 9 ; CAR ; PAIR ; GET ; IF_NONE { PUSH nat 0 } {} ; SUB ; ISNAT ; IF_NONE { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} ; SOME ; DIG 6 ; DUP ; GET 3 ; SWAP ; DUP ; DUG 8 ; CAR ; PAIR ; UPDATE ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; PAIR ; DUG 2 ; DUP ; GET 4 ; DUP 4 ; GET 7 ; DUP 3 ; GET 3 ; GET ; IF_NONE { PUSH nat 0 } {} ; SUB ; ISNAT ; IF_NONE { DIG 2 ; DUP ; GET 7 ; PUSH (option nat) (Some 0) ; DIG 3 ; GET 3 ; UPDATE ; UPDATE 7 ; SWAP } { DIG 3 ; DUP ; GET 7 ; DIG 2 ; SOME ; DIG 3 ; GET 3 ; UPDATE ; UPDATE 7 ; SWAP } } ; DROP ; NIL operation } } } { IF_LEFT { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ; PUSH nat 1 ; DUP 3 ; CAR ; GET 3 ; ADD ; DIG 2 ; DUP ; GET 8 ; DIG 3 ; DUP 4 ; PAIR ; SOME ; DUP 4 ; UPDATE ; UPDATE 8 ; DUP ; GET 7 ; PUSH (option nat) (Some 0) ; DIG 3 ; UPDATE ; UPDATE 7 ; UNPAIR ; UNPAIR ; SWAP ; UNPAIR ; PUSH nat 1 ; ADD ; PAIR ; SWAP ; PAIR ; PAIR } { IF_LEFT { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ; PUSH nat 0 ; DUP 3 ; GET 7 ; DUP 3 ; CAR ; GET ; IF_NONE { PUSH int 81 ; FAILWITH } {} ; COMPARE ; EQ ; IF {} { PUSH string "OE_TOKEN_EXISTS" ; FAILWITH } ; DUP ; GET 9 ; PUSH nat 0 ; COMPARE ; LT ; IF {} { PUSH string "OE_AT_LEAST_1" ; FAILWITH } ; SWAP ; DUP ; DUG 2 ; GET 8 ; SWAP ; DUP ; DUG 2 ; CAR ; MEM ; IF {} { PUSH string "OE_TOKEN_N_EXISTS" ; FAILWITH } ; DUP ; GET 14 ; PUSH nat 0 ; COMPARE ; LT ; IF {} { PUSH string "OE_NO_TOTAL" ; FAILWITH } ; PUSH nat 0 ; SWAP ; DUP ; DUG 2 ; GET 13 ; ITER { CDR ; ADD } ; SWAP ; DUP ; DUG 2 ; GET 14 ; COMPARE ; EQ ; IF {} { PUSH string "OE_SHARE_MISMATCH" ; FAILWITH } ; DUP ; GET 3 ; SWAP ; DUP ; DUG 2 ; GET 5 ; SUB ; PUSH int 3600 ; SWAP ; COMPARE ; GE ; IF {} { PUSH string "OE_AT_LEAST_3600" ; FAILWITH } ; SWAP ; DUP ; GET 5 ; DIG 2 ; DUP ; GET 3 ; SWAP ; DUP ; DUG 4 ; GET 12 ; PAIR ; DUP 4 ; GET 7 ; PAIR ; DIG 3 ; DUP ; GET 9 ; SWAP ; DUP ; DUG 5 ; GET 5 ; PAIR ; DUP 5 ; GET 11 ; PAIR ; PAIR ; SOME ; DIG 3 ; CAR ; UPDATE ; UPDATE 5 } { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ; SWAP ; DUP ; DUG 2 ; GET 8 ; SWAP ; DUP ; DUG 2 ; MEM ; IF {} { PUSH string "OE_TOKEN_MISSING" ; FAILWITH } ; SWAP ; UNPAIR ; UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; SWAP ; PUSH (option unit) (Some Unit) ; DIG 6 ; UPDATE ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; PAIR } } ; NIL operation } } { IF_LEFT { IF_LEFT { SWAP ; DUP ; DUG 2 ; GET 5 ; SWAP ; DUP ; DUG 2 ; CDR ; MEM ; IF {} { PUSH string "OE_NO_SALE_ACTIVE" ; FAILWITH } ; SWAP ; DUP ; DUG 2 ; GET 5 ; SWAP ; DUP ; DUG 2 ; CDR ; GET ; IF_NONE { PUSH int 120 ; FAILWITH } {} ; DUP ; GET 6 ; NOW ; COMPARE ; GE ; IF { DUP ; CAR ; GET 3 ; NOW ; COMPARE ; LE } { PUSH bool False } ; IF {} { PUSH string "OE_NOT_IN_SALE_TIME" ; FAILWITH } ; SWAP ; DUP ; DUG 2 ; CDR ; SENDER ; PAIR ; PUSH nat 0 ; DUP 4 ; CAR ; COMPARE ; GT ; IF { DUP 4 ; CAR ; CAR ; CDR ; SWAP ; DUP ; DUG 2 ; GET ; IF_NONE { PUSH nat 0 } {} ; DUP 3 ; CAR ; GET 4 ; SUB ; ISNAT ; IF_NONE { PUSH int 135 ; FAILWITH } {} ; DUP 4 ; CAR ; COMPARE ; LE } { PUSH bool False } ; IF {} { PUSH string "OE_WRONG_AMOUNT" ; FAILWITH } ; DUP 4 ; UNPAIR ; UNPAIR ; UNPAIR ; SWAP ; DUP 7 ; CAR ; DIG 8 ; CAR ; CAR ; CDR ; DUP 7 ; GET ; IF_NONE { PUSH nat 0 } {} ; ADD ; SOME ; DUP 6 ; UPDATE ; SWAP ; PAIR ; PAIR ; PAIR ; DUG 3 ; SWAP ; DUP ; DUG 2 ; GET 3 ; DUP 4 ; CAR ; MUL ; AMOUNT ; COMPARE ; EQ ; IF {} { PUSH string "OE_WRONG_AMOUNT" ; FAILWITH } ; NIL operation ; DUP 3 ; GET 5 ; CAR ; ITER { DUP 4 ; GET 5 ; CDR ; SWAP ; DUP ; DUG 2 ; CDR ; AMOUNT ; MUL ; EDIV ; IF_NONE { PUSH int 147 ; FAILWITH } {} ; CAR ; DUP ; PUSH mutez 0 ; COMPARE ; LT ; IF { DUG 2 ; CAR ; CONTRACT unit ; IF_NONE { PUSH int 151 ; FAILWITH } {} ; DIG 2 ; UNIT ; TRANSFER_TOKENS ; CONS } { DROP 2 } } ; DIG 2 ; DROP ; DUP 4 ; UNPAIR ; UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; DUP 8 ; CAR ; DIG 9 ; CAR ; GET 5 ; DUP 9 ; GET ; IF_NONE { PUSH nat 0 } {} ; ADD ; SOME ; DIG 7 ; UPDATE ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; PAIR ; DUP ; GET 7 ; DUP ; DUP 5 ; CDR ; DUP ; DUG 2 ; GET ; IF_NONE { PUSH int 156 ; FAILWITH } {} ; DIG 5 ; CAR ; ADD ; SOME ; SWAP ; UPDATE ; UPDATE 7 ; SWAP } { IF_LEFT { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ; SWAP ; DUP ; DUG 2 ; GET 8 ; SWAP ; DUP ; DUG 2 ; GET 4 ; MEM ; IF {} { PUSH string "OE_TOKEN_N_EXTIST" ; FAILWITH } ; PUSH nat 0 ; DUP 3 ; GET 7 ; DUP 3 ; GET 4 ; GET ; IF_NONE { PUSH int 212 ; FAILWITH } {} ; COMPARE ; EQ ; IF {} { PUSH string "OE_TOKEN_HAS_EDITIONS" ; FAILWITH } ; SWAP ; DUP ; DUG 2 ; GET 5 ; SWAP ; DUP ; DUG 2 ; GET 4 ; MEM ; IF { NOW ; DUP 3 ; GET 5 ; DUP 3 ; GET 4 ; GET ; IF_NONE { PUSH int 215 ; FAILWITH } {} ; CAR ; GET 3 ; COMPARE ; LT } { PUSH bool True } ; IF {} { PUSH string "OE_TOKEN_CONFIGURED_FOR_SALE" ; FAILWITH } ; SWAP ; UNPAIR ; UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; DUP 6 ; CAR ; SOME ; DIG 6 ; DUP ; GET 4 ; SWAP ; DUP ; DUG 8 ; GET 3 ; PAIR ; UPDATE ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; PAIR ; DUP ; GET 7 ; DUP 3 ; CAR ; SOME ; DIG 3 ; GET 4 ; UPDATE ; UPDATE 7 } { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ; SWAP ; UNPAIR ; UNPAIR ; CDR ; DIG 3 ; PAIR ; PAIR ; PAIR } ; NIL operation } } { IF_LEFT { IF_LEFT { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; CDR ; DIG 3 ; PAIR ; PAIR ; SWAP ; PAIR } { DUP ; ITER { DUP ; CDR ; ITER { DUP 4 ; GET 8 ; SWAP ; DUP ; DUG 2 ; GET 3 ; MEM ; IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ; SWAP ; DUP ; DUG 2 ; CAR ; SENDER ; COMPARE ; EQ ; IF { PUSH bool True } { DUP 4 ; GET 3 ; CDR ; SWAP ; DUP ; DUG 2 ; GET 3 ; SENDER ; DUP 5 ; CAR ; PAIR 3 ; MEM } ; IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ; DUP ; GET 4 ; PUSH nat 0 ; COMPARE ; LT ; IF { DUP 4 ; UNPAIR ; UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; DUP 6 ; GET 4 ; DIG 9 ; CAR ; GET 5 ; DUP 8 ; GET 3 ; DUP 10 ; CAR ; PAIR ; GET ; IF_NONE { PUSH nat 0 } {} ; SUB ; ISNAT ; IF_NONE { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} ; SOME ; DUP 7 ; GET 3 ; DUP 9 ; CAR ; PAIR ; UPDATE ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; PAIR ; DUP ; DUG 4 ; UNPAIR ; UNPAIR ; SWAP ; UNPAIR ; SWAP ; UNPAIR ; DUP 6 ; GET 4 ; DIG 9 ; CAR ; GET 5 ; DIG 7 ; DUP ; GET 3 ; SWAP ; DUP ; DUG 9 ; CAR ; PAIR ; GET ; IF_NONE { PUSH nat 0 } {} ; ADD ; SOME ; DIG 6 ; DUP ; GET 3 ; SWAP ; CAR ; PAIR ; UPDATE ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; PAIR ; DUG 2 } { DROP } } ; DROP } ; DROP } } { IF_LEFT { DUP ; ITER { IF_LEFT { DUP ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ; DIG 2 ; UNPAIR ; SWAP ; UNPAIR ; UNPAIR ; SWAP ; PUSH (option unit) (Some Unit) ; DIG 5 ; UPDATE ; SWAP ; PAIR ; PAIR ; SWAP ; PAIR ; SWAP } { DUP ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ; DIG 2 ; UNPAIR ; SWAP ; UNPAIR ; UNPAIR ; SWAP ; NONE unit ; DIG 5 ; UPDATE ; SWAP ; PAIR ; PAIR ; SWAP ; PAIR ; SWAP } } ; DROP } { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {} { PUSH string "FA2_NOT_ADMIN" ; FAILWITH } ; DUP ; ITER { DUP 3 ; CAR ; GET 6 ; SWAP ; DUP ; DUG 2 ; CAR ; MEM ; IF { PUSH string "OE_TOKEN_LOCKED" ; FAILWITH } {} ; DIG 2 ; DUP ; GET 8 ; DIG 2 ; DUP ; CDR ; SWAP ; DUP ; DUG 4 ; CAR ; PAIR ; SOME ; DIG 3 ; CAR ; UPDATE ; UPDATE 8 ; SWAP } ; DROP } } ; NIL operation } } ; NIL operation ; SWAP ; ITER { CONS } ; PAIR }""");

      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          Dartez.normalizePrimitiveRecordOrder(
              """[{"prim":"parameter","args":[{"prim":"or","args":[{"prim":"or","args":[{"prim":"or","args":[{"prim":"map","annots":["%airdrop"],"args":[{"prim":"nat"},{"prim":"list","args":[{"prim":"pair","args":[{"prim":"nat","annots":["%amount"]},{"prim":"address","annots":["%recipient"]}]}]}]},{"prim":"or","args":[{"prim":"pair","annots":["%balance_of"],"args":[{"prim":"list","annots":["%requests"],"args":[{"prim":"pair","args":[{"prim":"address","annots":["%owner"]},{"prim":"nat","annots":["%token_id"]}]}]},{"prim":"contract","annots":["%callback"],"args":[{"prim":"list","args":[{"prim":"pair","args":[{"prim":"pair","annots":["%request"],"args":[{"prim":"address","annots":["%owner"]},{"prim":"nat","annots":["%token_id"]}]},{"prim":"nat","annots":["%balance"]}]}]}]}]},{"prim":"list","annots":["%burn"],"args":[{"prim":"pair","args":[{"prim":"address","annots":["%from_"]},{"prim":"pair","args":[{"prim":"nat","annots":["%token_id"]},{"prim":"nat","annots":["%amount"]}]}]}]}]}]},{"prim":"or","args":[{"prim":"map","annots":["%create_token"],"args":[{"prim":"string"},{"prim":"bytes"}]},{"prim":"or","args":[{"prim":"pair","annots":["%list_token"],"args":[{"prim":"nat","annots":["%token_id"]},{"prim":"pair","args":[{"prim":"timestamp","annots":["%start_time"]},{"prim":"pair","args":[{"prim":"timestamp","annots":["%end_time"]},{"prim":"pair","args":[{"prim":"mutez","annots":["%price"]},{"prim":"pair","args":[{"prim":"nat","annots":["%max_per_wallet"]},{"prim":"pair","args":[{"prim":"nat","annots":["%airdrop_capacity"]},{"prim":"pair","annots":["%split"],"args":[{"prim":"map","annots":["%shares"],"args":[{"prim":"address"},{"prim":"nat"}]},{"prim":"nat","annots":["%total"]}]}]}]}]}]}]}]},{"prim":"nat","annots":["%lock"]}]}]}]},{"prim":"or","args":[{"prim":"or","args":[{"prim":"pair","annots":["%mint"],"args":[{"prim":"nat","annots":["%amount"]},{"prim":"nat","annots":["%token_id"]}]},{"prim":"or","args":[{"prim":"pair","annots":["%mint_normal"],"args":[{"prim":"nat","annots":["%amount"]},{"prim":"pair","args":[{"prim":"address","annots":["%to_"]},{"prim":"nat","annots":["%token_id"]}]}]},{"prim":"address","annots":["%set_administrator"]}]}]},{"prim":"or","args":[{"prim":"or","args":[{"prim":"big_map","annots":["%set_metadata"],"args":[{"prim":"string"},{"prim":"bytes"}]},{"prim":"list","annots":["%transfer"],"args":[{"prim":"pair","args":[{"prim":"address","annots":["%from_"]},{"prim":"list","annots":["%txs"],"args":[{"prim":"pair","args":[{"prim":"address","annots":["%to_"]},{"prim":"pair","args":[{"prim":"nat","annots":["%token_id"]},{"prim":"nat","annots":["%amount"]}]}]}]}]}]}]},{"prim":"or","args":[{"prim":"list","annots":["%update_operators"],"args":[{"prim":"or","args":[{"prim":"pair","annots":["%add_operator"],"args":[{"prim":"address","annots":["%owner"]},{"prim":"pair","args":[{"prim":"address","annots":["%operator"]},{"prim":"nat","annots":["%token_id"]}]}]},{"prim":"pair","annots":["%remove_operator"],"args":[{"prim":"address","annots":["%owner"]},{"prim":"pair","args":[{"prim":"address","annots":["%operator"]},{"prim":"nat","annots":["%token_id"]}]}]}]}]},{"prim":"list","annots":["%update_token_metadata"],"args":[{"prim":"pair","args":[{"prim":"nat","annots":["%token_id"]},{"prim":"map","annots":["%token_info"],"args":[{"prim":"string"},{"prim":"bytes"}]}]}]}]}]}]}]}]},{"prim":"storage","args":[{"prim":"pair","args":[{"prim":"pair","args":[{"prim":"pair","args":[{"prim":"address","annots":["%administrator"]},{"prim":"big_map","annots":["%claimed"],"args":[{"prim":"pair","args":[{"prim":"address"},{"prim":"nat"}]},{"prim":"nat"}]}]},{"prim":"pair","args":[{"prim":"nat","annots":["%last_token_id"]},{"prim":"pair","args":[{"prim":"big_map","annots":["%ledger"],"args":[{"prim":"pair","args":[{"prim":"address"},{"prim":"nat"}]},{"prim":"nat"}]},{"prim":"big_map","annots":["%locked"],"args":[{"prim":"nat"},{"prim":"unit"}]}]}]}]},{"prim":"pair","args":[{"prim":"pair","args":[{"prim":"big_map","annots":["%metadata"],"args":[{"prim":"string"},{"prim":"bytes"}]},{"prim":"big_map","annots":["%operators"],"args":[{"prim":"pair","args":[{"prim":"address","annots":["%owner"]},{"prim":"pair","args":[{"prim":"address","annots":["%operator"]},{"prim":"nat","annots":["%token_id"]}]}]},{"prim":"unit"}]}]},{"prim":"pair","args":[{"prim":"big_map","annots":["%sales"],"args":[{"prim":"nat"},{"prim":"pair","args":[{"prim":"pair","args":[{"prim":"nat","annots":["%airdrop_capacity"]},{"prim":"pair","args":[{"prim":"timestamp","annots":["%end_time"]},{"prim":"nat","annots":["%max_per_wallet"]}]}]},{"prim":"pair","args":[{"prim":"mutez","annots":["%price"]},{"prim":"pair","args":[{"prim":"pair","annots":["%split"],"args":[{"prim":"map","annots":["%shares"],"args":[{"prim":"address"},{"prim":"nat"}]},{"prim":"nat","annots":["%total"]}]},{"prim":"timestamp","annots":["%start_time"]}]}]}]}]},{"prim":"pair","args":[{"prim":"big_map","annots":["%supply"],"args":[{"prim":"nat"},{"prim":"nat"}]},{"prim":"big_map","annots":["%token_metadata"],"args":[{"prim":"nat"},{"prim":"pair","args":[{"prim":"nat","annots":["%token_id"]},{"prim":"map","annots":["%token_info"],"args":[{"prim":"string"},{"prim":"bytes"}]}]}]}]}]}]}]}]},{"prim":"code","args":[[{"prim":"UNPAIR"},{"prim":"IF_LEFT","args":[[{"prim":"IF_LEFT","args":[[{"prim":"IF_LEFT","args":[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_ADMIN"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP"},{"prim":"ITER","args":[[{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"MEM"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_NO_SALE"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP"},{"prim":"CDR"},{"prim":"ITER","args":[[{"prim":"DUP","args":[{"int":"4"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"193"}]},{"prim":"FAILWITH"}],[]]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CDR"},{"prim":"PAIR"},{"prim":"DUP","args":[{"int":"6"}]},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"DUP","args":[{"int":"8"}]},{"prim":"CAR"},{"prim":"DIG","args":[{"int":"11"}]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"5"}]},{"prim":"DUP","args":[{"int":"8"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]}],[]]},{"prim":"ADD"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"6"}]},{"prim":"UPDATE"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUP"},{"prim":"GET","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"DUP","args":[{"int":"6"}]},{"prim":"CAR"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"199"}]},{"prim":"FAILWITH"}],[]]},{"prim":"DUP","args":[{"int":"6"}]},{"prim":"CAR"},{"prim":"ADD"},{"prim":"SOME"},{"prim":"SWAP"},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"5"}]},{"prim":"DUP"},{"prim":"DUP","args":[{"int":"6"}]},{"prim":"CAR"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"200"}]},{"prim":"FAILWITH"}],[]]},{"prim":"UNPAIR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"6"}]},{"prim":"CAR"},{"prim":"DIG","args":[{"int":"6"}]},{"prim":"SUB"},{"prim":"ISNAT"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_AIRDROP_CAP_REACHED"}]},{"prim":"FAILWITH"}],[]]},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SOME"},{"prim":"SWAP"},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"5"}]},{"prim":"DUG","args":[{"int":"2"}]}]]},{"prim":"DROP"}]]},{"prim":"DROP"},{"prim":"NIL","args":[{"prim":"operation"}]}],[{"prim":"IF_LEFT","args":[[{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"DUP"},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CDR"},{"prim":"PUSH","args":[{"prim":"mutez"},{"int":"0"}]},{"prim":"DUP","args":[{"int":"5"}]},{"prim":"CAR"},{"prim":"MAP","args":[[{"prim":"DUP","args":[{"int":"7"}]},{"prim":"GET","args":[{"int":"8"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"MEM"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_TOKEN_UNDEFINED"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP","args":[{"int":"7"}]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"5"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"PAIR"},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]}],[]]},{"prim":"SWAP"},{"prim":"PAIR"}]]},{"prim":"DIG","args":[{"int":"4"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"4"}]},{"prim":"DROP"},{"prim":"TRANSFER_TOKENS"},{"prim":"CONS"}],[{"prim":"DUP"},{"prim":"ITER","args":[[{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"8"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"MEM"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_TOKEN_UNDEFINED"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"True"}]}],[{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"SENDER"},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"CAR"},{"prim":"PAIR","args":[{"int":"3"}]},{"prim":"MEM"}]]},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_OPERATOR"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"DUP","args":[{"int":"6"}]},{"prim":"GET","args":[{"int":"4"}]},{"prim":"DIG","args":[{"int":"8"}]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"5"}]},{"prim":"DIG","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"3"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"9"}]},{"prim":"CAR"},{"prim":"PAIR"},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]}],[]]},{"prim":"SUB"},{"prim":"ISNAT"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_INSUFFICIENT_BALANCE"}]},{"prim":"FAILWITH"}],[]]},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"6"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"3"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"8"}]},{"prim":"CAR"},{"prim":"PAIR"},{"prim":"UPDATE"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"4"}]},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"GET","args":[{"int":"7"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]}],[]]},{"prim":"SUB"},{"prim":"ISNAT"},{"prim":"IF_NONE","args":[[{"prim":"DIG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"7"}]},{"prim":"PUSH","args":[{"prim":"option","args":[{"prim":"nat"}]},{"prim":"Some","args":[{"int":"0"}]}]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"7"}]},{"prim":"SWAP"}],[{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"7"}]},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"7"}]},{"prim":"SWAP"}]]}]]},{"prim":"DROP"},{"prim":"NIL","args":[{"prim":"operation"}]}]]}]]}],[{"prim":"IF_LEFT","args":[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_ADMIN"}]},{"prim":"FAILWITH"}]]},{"prim":"PUSH","args":[{"prim":"nat"},{"int":"1"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"3"}]},{"prim":"ADD"},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"8"}]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"PAIR"},{"prim":"SOME"},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"8"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"7"}]},{"prim":"PUSH","args":[{"prim":"option","args":[{"prim":"nat"}]},{"prim":"Some","args":[{"int":"0"}]}]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"7"}]},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"PUSH","args":[{"prim":"nat"},{"int":"1"}]},{"prim":"ADD"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"}],[{"prim":"IF_LEFT","args":[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_ADMIN"}]},{"prim":"FAILWITH"}]]},{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"7"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"81"}]},{"prim":"FAILWITH"}],[]]},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_TOKEN_EXISTS"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"9"}]},{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]},{"prim":"COMPARE"},{"prim":"LT"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_AT_LEAST_1"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"8"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"MEM"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_TOKEN_N_EXISTS"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"14"}]},{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]},{"prim":"COMPARE"},{"prim":"LT"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_NO_TOTAL"}]},{"prim":"FAILWITH"}]]},{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"13"}]},{"prim":"ITER","args":[[{"prim":"CDR"},{"prim":"ADD"}]]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"14"}]},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_SHARE_MISMATCH"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"3"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"SUB"},{"prim":"PUSH","args":[{"prim":"int"},{"int":"3600"}]},{"prim":"SWAP"},{"prim":"COMPARE"},{"prim":"GE"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_AT_LEAST_3600"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"GET","args":[{"int":"5"}]},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"3"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"GET","args":[{"int":"12"}]},{"prim":"PAIR"},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"GET","args":[{"int":"7"}]},{"prim":"PAIR"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"9"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"5"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"PAIR"},{"prim":"DUP","args":[{"int":"5"}]},{"prim":"GET","args":[{"int":"11"}]},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"5"}]}],[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_ADMIN"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"8"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"MEM"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_TOKEN_MISSING"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"PUSH","args":[{"prim":"option","args":[{"prim":"unit"}]},{"prim":"Some","args":[{"prim":"Unit"}]}]},{"prim":"DIG","args":[{"int":"6"}]},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"}]]}]]},{"prim":"NIL","args":[{"prim":"operation"}]}]]}],[{"prim":"IF_LEFT","args":[[{"prim":"IF_LEFT","args":[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"MEM"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_NO_SALE_ACTIVE"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"120"}]},{"prim":"FAILWITH"}],[]]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"6"}]},{"prim":"NOW"},{"prim":"COMPARE"},{"prim":"GE"},{"prim":"IF","args":[[{"prim":"DUP"},{"prim":"CAR"},{"prim":"GET","args":[{"int":"3"}]},{"prim":"NOW"},{"prim":"COMPARE"},{"prim":"LE"}],[{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"False"}]}]]},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_NOT_IN_SALE_TIME"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"SENDER"},{"prim":"PAIR"},{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"CAR"},{"prim":"COMPARE"},{"prim":"GT"},{"prim":"IF","args":[[{"prim":"DUP","args":[{"int":"4"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]}],[]]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"4"}]},{"prim":"SUB"},{"prim":"ISNAT"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"135"}]},{"prim":"FAILWITH"}],[]]},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"CAR"},{"prim":"COMPARE"},{"prim":"LE"}],[{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"False"}]}]]},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_WRONG_AMOUNT"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"DUP","args":[{"int":"7"}]},{"prim":"CAR"},{"prim":"DIG","args":[{"int":"8"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DUP","args":[{"int":"7"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]}],[]]},{"prim":"ADD"},{"prim":"SOME"},{"prim":"DUP","args":[{"int":"6"}]},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"3"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"CAR"},{"prim":"MUL"},{"prim":"AMOUNT"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_WRONG_AMOUNT"}]},{"prim":"FAILWITH"}]]},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"CAR"},{"prim":"ITER","args":[[{"prim":"DUP","args":[{"int":"4"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"AMOUNT"},{"prim":"MUL"},{"prim":"EDIV"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"147"}]},{"prim":"FAILWITH"}],[]]},{"prim":"CAR"},{"prim":"DUP"},{"prim":"PUSH","args":[{"prim":"mutez"},{"int":"0"}]},{"prim":"COMPARE"},{"prim":"LT"},{"prim":"IF","args":[[{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CONTRACT","args":[{"prim":"unit"}]},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"151"}]},{"prim":"FAILWITH"}],[]]},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"UNIT"},{"prim":"TRANSFER_TOKENS"},{"prim":"CONS"}],[{"prim":"DROP","args":[{"int":"2"}]}]]}]]},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"DROP"},{"prim":"DUP","args":[{"int":"4"}]},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"DUP","args":[{"int":"8"}]},{"prim":"CAR"},{"prim":"DIG","args":[{"int":"9"}]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"5"}]},{"prim":"DUP","args":[{"int":"9"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]}],[]]},{"prim":"ADD"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"7"}]},{"prim":"UPDATE"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUP"},{"prim":"GET","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"DUP","args":[{"int":"5"}]},{"prim":"CDR"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"156"}]},{"prim":"FAILWITH"}],[]]},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"CAR"},{"prim":"ADD"},{"prim":"SOME"},{"prim":"SWAP"},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"7"}]},{"prim":"SWAP"}],[{"prim":"IF_LEFT","args":[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_ADMIN"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"8"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"4"}]},{"prim":"MEM"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_TOKEN_N_EXTIST"}]},{"prim":"FAILWITH"}]]},{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"7"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"4"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"212"}]},{"prim":"FAILWITH"}],[]]},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_TOKEN_HAS_EDITIONS"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"4"}]},{"prim":"MEM"},{"prim":"IF","args":[[{"prim":"NOW"},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"5"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"4"}]},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"int"},{"int":"215"}]},{"prim":"FAILWITH"}],[]]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"3"}]},{"prim":"COMPARE"},{"prim":"LT"}],[{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"True"}]}]]},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_TOKEN_CONFIGURED_FOR_SALE"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"DUP","args":[{"int":"6"}]},{"prim":"CAR"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"6"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"4"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"8"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"PAIR"},{"prim":"UPDATE"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUP"},{"prim":"GET","args":[{"int":"7"}]},{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"GET","args":[{"int":"4"}]},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"7"}]}],[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_ADMIN"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"}]]},{"prim":"NIL","args":[{"prim":"operation"}]}]]}],[{"prim":"IF_LEFT","args":[[{"prim":"IF_LEFT","args":[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_ADMIN"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"}],[{"prim":"DUP"},{"prim":"ITER","args":[[{"prim":"DUP"},{"prim":"CDR"},{"prim":"ITER","args":[[{"prim":"DUP","args":[{"int":"4"}]},{"prim":"GET","args":[{"int":"8"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"MEM"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_TOKEN_UNDEFINED"}]},{"prim":"FAILWITH"}]]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"True"}]}],[{"prim":"DUP","args":[{"int":"4"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"SENDER"},{"prim":"DUP","args":[{"int":"5"}]},{"prim":"CAR"},{"prim":"PAIR","args":[{"int":"3"}]},{"prim":"MEM"}]]},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_OPERATOR"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"4"}]},{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]},{"prim":"COMPARE"},{"prim":"LT"},{"prim":"IF","args":[[{"prim":"DUP","args":[{"int":"4"}]},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"DUP","args":[{"int":"6"}]},{"prim":"GET","args":[{"int":"4"}]},{"prim":"DIG","args":[{"int":"9"}]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"5"}]},{"prim":"DUP","args":[{"int":"8"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"DUP","args":[{"int":"10"}]},{"prim":"CAR"},{"prim":"PAIR"},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]}],[]]},{"prim":"SUB"},{"prim":"ISNAT"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_INSUFFICIENT_BALANCE"}]},{"prim":"FAILWITH"}],[]]},{"prim":"SOME"},{"prim":"DUP","args":[{"int":"7"}]},{"prim":"GET","args":[{"int":"3"}]},{"prim":"DUP","args":[{"int":"9"}]},{"prim":"CAR"},{"prim":"PAIR"},{"prim":"UPDATE"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"DUP","args":[{"int":"6"}]},{"prim":"GET","args":[{"int":"4"}]},{"prim":"DIG","args":[{"int":"9"}]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"5"}]},{"prim":"DIG","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"3"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"9"}]},{"prim":"CAR"},{"prim":"PAIR"},{"prim":"GET"},{"prim":"IF_NONE","args":[[{"prim":"PUSH","args":[{"prim":"nat"},{"int":"0"}]}],[]]},{"prim":"ADD"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"6"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"3"}]},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"PAIR"},{"prim":"UPDATE"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"2"}]}],[{"prim":"DROP"}]]}]]},{"prim":"DROP"}]]},{"prim":"DROP"}]]}],[{"prim":"IF_LEFT","args":[[{"prim":"DUP"},{"prim":"ITER","args":[[{"prim":"IF_LEFT","args":[[{"prim":"DUP"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_OWNER"}]},{"prim":"FAILWITH"}]]},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"PUSH","args":[{"prim":"option","args":[{"prim":"unit"}]},{"prim":"Some","args":[{"prim":"Unit"}]}]},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"}],[{"prim":"DUP"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_OWNER"}]},{"prim":"FAILWITH"}]]},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"UNPAIR"},{"prim":"UNPAIR"},{"prim":"SWAP"},{"prim":"NONE","args":[{"prim":"unit"}]},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"}]]}]]},{"prim":"DROP"}],[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},{"prim":"IF","args":[[],[{"prim":"PUSH","args":[{"prim":"string"},{"string":"FA2_NOT_ADMIN"}]},{"prim":"FAILWITH"}]]},{"prim":"DUP"},{"prim":"ITER","args":[[{"prim":"DUP","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"GET","args":[{"int":"6"}]},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"MEM"},{"prim":"IF","args":[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"OE_TOKEN_LOCKED"}]},{"prim":"FAILWITH"}],[]]},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"GET","args":[{"int":"8"}]},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"CAR"},{"prim":"PAIR"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"UPDATE"},{"prim":"UPDATE","args":[{"int":"8"}]},{"prim":"SWAP"}]]},{"prim":"DROP"}]]}]]},{"prim":"NIL","args":[{"prim":"operation"}]}]]}]]},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"SWAP"},{"prim":"ITER","args":[[{"prim":"CONS"}]]},{"prim":"PAIR"}]]}]"""));
    });
  });

  group("Parsing semicolon without space", () {
    test("test 1", () {
      var result = Parser.parseMichelsonScript(
          """parameter string;storage string;code { DUP; DIP { CDR ; NIL string ; SWAP ; CONS } ; CAR ; CONS ; CONCAT ; NIL operation ; PAIR}""");
      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          Dartez.normalizePrimitiveRecordOrder(
              """[{"prim":"parameter","args":[{"prim":"string"}]},{"prim":"storage","args":[{"prim":"string"}]},{"prim":"code","args":[[{"prim":"DUP"},{"prim":"DIP","args":[[{"prim":"CDR"},{"prim":"NIL","args":[{"prim":"string"}]},{"prim":"SWAP"},{"prim":"CONS"}]]},{"prim":"CAR"},{"prim":"CONS"},{"prim":"CONCAT"},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"PAIR"}]]}]"""));
    });

    test("test 2", () {
      var result = Parser.parseMichelsonScript(
          """parameter (pair (lambda int int) (list int));storage (list int);code { DIP{NIL int}; CAR; DUP; DIP{CAR; PAIR}; CDR; ITER {PAIR; DUP; CDAR; DIP{ DUP; DIP{CDAR}; DUP; CAR; DIP{CDDR; SWAP}; EXEC; CONS}; PAIR}; CDR; DIP{NIL int}; ITER {CONS}; NIL operation; PAIR}""");
      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          Dartez.normalizePrimitiveRecordOrder(
              """[{"prim":"parameter","args":[{"prim":"pair","args":[{"prim":"lambda","args":[{"prim":"int"},{"prim":"int"}]},{"prim":"list","args":[{"prim":"int"}]}]}]},{"prim":"storage","args":[{"prim":"list","args":[{"prim":"int"}]}]},{"prim":"code","args":[[{"prim":"DIP","args":[[{"prim":"NIL","args":[{"prim":"int"}]}]]},{"prim":"CAR"},{"prim":"DUP"},{"prim":"DIP","args":[[{"prim":"CAR"},{"prim":"PAIR"}]]},{"prim":"CDR"},{"prim":"ITER","args":[[{"prim":"PAIR"},{"prim":"DUP"},[{"prim":"CDR"},{"prim":"CAR"}],{"prim":"DIP","args":[[{"prim":"DUP"},{"prim":"DIP","args":[[[{"prim":"CDR"},{"prim":"CAR"}]]]},{"prim":"DUP"},{"prim":"CAR"},{"prim":"DIP","args":[[[{"prim":"CDR"},{"prim":"CDR"}],{"prim":"SWAP"}]]},{"prim":"EXEC"},{"prim":"CONS"}]]},{"prim":"PAIR"}]]},{"prim":"CDR"},{"prim":"DIP","args":[[{"prim":"NIL","args":[{"prim":"int"}]}]]},{"prim":"ITER","args":[[{"prim":"CONS"}]]},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"PAIR"}]]}]"""));
    });

    test("test 3", () {
      var result = Parser.parseMichelsonScript(
          """parameter (pair (list int) (list int));storage (list int);code { CAR; UNPAIR  ; NIL int; SWAP; ITER {CONS}; ITER {CONS}; NIL operation; PAIR}""");
      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          Dartez.normalizePrimitiveRecordOrder(
              """[{"prim":"parameter","args":[{"prim":"pair","args":[{"prim":"list","args":[{"prim":"int"}]},{"prim":"list","args":[{"prim":"int"}]}]}]},{"prim":"storage","args":[{"prim":"list","args":[{"prim":"int"}]}]},{"prim":"code","args":[[{"prim":"CAR"},{"prim":"UNPAIR"},{"prim":"NIL","args":[{"prim":"int"}]},{"prim":"SWAP"},{"prim":"ITER","args":[[{"prim":"CONS"}]]},{"prim":"ITER","args":[[{"prim":"CONS"}]]},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"PAIR"}]]}]"""));
    });
  });

  group("parse escaped characters in strings", () {
    test("test 1", () {
      var result = Parser.parseMichelsonScript(
          r"""parameter nat;storage unit;code { PUSH string "{\"label\":\"ERX Trade Snapshot (25 Jan 2023 17:00:00.000000 +00:00)\",\"uri\":\"https://erx.blob.core.windows.net/cdn/archives/exchange/ERX_TradeSnapshot_20230126_0000.csv\",\"checksum\":\"8eef75be1d64f48e378a13f9bb9aa08c\"}" ; FAILWITH }
""");
      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          Dartez.normalizePrimitiveRecordOrder(
              r"""[ { "prim": "parameter", "args": [ { "prim": "nat" } ] }, { "prim": "storage", "args": [ { "prim": "unit" } ] }, { "prim": "code", "args": [ [ { "prim": "PUSH", "args": [ { "prim": "string" }, { "string": "{\"label\":\"ERX Trade Snapshot (25 Jan 2023 17:00:00.000000 +00:00)\",\"uri\":\"https://erx.blob.core.windows.net/cdn/archives/exchange/ERX_TradeSnapshot_20230126_0000.csv\",\"checksum\":\"8eef75be1d64f48e378a13f9bb9aa08c\"}" } ] }, { "prim": "FAILWITH" } ] ] } ]"""));
    });

    test("test 2, throw an error check", () {
      try {
        Parser.parseMichelsonScript(
            r"""parameter nat;storage unit;code { PUSH string "\"; DUP ; PUSH int 1 ; PUSH string /"other string" ; FAILWITH } ; """);
        fail("Should throw an error");
      } catch (e) {
        expect(e.toString(), "Exception: Invalid code");
      }
    });
  });

  group(
      "Check & parse script no particular order, missing or with comment sections in michelson script",
      () {
    test("test 1 - no particular order script", () {
      var result = Parser.parseMichelsonScript(
          """code { DROP ; PUSH string "is this a storage section?" ; NIL operation ; PAIR };
parameter unit ;
storage string ;""");
      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          """[{"prim":"parameter","args":[{"prim":"unit"}]},{"prim":"storage","args":[{"prim":"string"}]},{"prim":"code","args":[[{"prim":"DROP"},{"prim":"PUSH","args":[{"prim":"string"},{"string":"is this a storage section?"}]},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"PAIR"}]]}]""");
    });

    test("test 2 - no particular order script", () {
      var result = Parser.parseMichelsonScript("""storage string ;
code { DROP ; PUSH string "is this a storage section?" ; NIL operation ; PAIR };
parameter unit ;
""");
      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          """[{"prim":"parameter","args":[{"prim":"unit"}]},{"prim":"storage","args":[{"prim":"string"}]},{"prim":"code","args":[[{"prim":"DROP"},{"prim":"PUSH","args":[{"prim":"string"},{"string":"is this a storage section?"}]},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"PAIR"}]]}]""");
    });

    test("test 3 - missing storage sections script throw error check", () {
      try {
        Parser.parseMichelsonScript("""
code { DROP ; PUSH string "is this a storage section?" ; NIL operation ; PAIR };
parameter unit ;""");
        fail("Should throw an error");
      } catch (e) {
        expect(e.toString(),
            "Exception: Invalid Michelson script - missing storage");
      }
    });

    test("test 4 - script with comments", () {
      var result =
          Parser.parseMichelsonScript("""parameter unit ; # hello storage!
storage string ;
code { DROP ; PUSH string "is this a storage section?" ; NIL operation ; PAIR };""");
      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          """[{"prim":"parameter","args":[{"prim":"unit"}]},{"prim":"storage","args":[{"prim":"string"}]},{"prim":"code","args":[[{"prim":"DROP"},{"prim":"PUSH","args":[{"prim":"string"},{"string":"is this a storage section?"}]},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"PAIR"}]]}]""");
    });
  });

  group("view support check", () {
    test("test 1", () {
      var result = Parser.parseMichelsonScript(
          """parameter nat;storage nat;code { CAR; NIL operation ; PAIR }; view "add_v" nat nat { UNPAIR; ADD }; view "mul_v" nat nat { UNPAIR; MUL };""");

      expect(
          jsonEncode(jsonDecode(Dartez.normalizePrimitiveRecordOrder(result!))),
          Dartez.normalizePrimitiveRecordOrder(
              """[{"prim":"parameter","args":[{"prim":"nat"}]},{"prim":"storage","args":[{"prim":"nat"}]},{"prim":"view","args":[{"string":"add_v"},{"prim":"nat"},{"prim":"nat"},[{"prim":"UNPAIR"},{"prim":"ADD"}]]},{"prim":"view","args":[{"string":"mul_v"},{"prim":"nat"},{"prim":"nat"},[{"prim":"UNPAIR"},{"prim":"MUL"}]]},{"prim":"code","args":[[{"prim":"CAR"},{"prim":"NIL","args":[{"prim":"operation"}]},{"prim":"PAIR"}]]}]"""));
    });
  });

  group('Michelson/Micheline contract tests', () {
    var contractSampleRoot =
        Directory.current.path + '/test/parser_test/samples';
    var samples = Glob(
      "$contractSampleRoot/**/*.michelson",
    ).listSync();
    for (int i = 0; i < samples.length; i++) {
      var contractName = samples[i];
      var d = path.dirname(contractName.path);
      var t = path.basename(d);
      var f = path.basenameWithoutExtension(contractName.path);

      if (!File("$d${path.separator}$f.micheline").existsSync()) {
        print("Skipping $t${path.separator}$f, missing micheline.");
        continue;
      }

      test('Michelson/Micheline contract test: $t${path.separator}$f', () {
        String michelson =
            File('$d${path.separator}$f.michelson').readAsStringSync();
        String micheline =
            File('$d${path.separator}$f.micheline').readAsStringSync();

        if (michelson.length > 800 && d.contains("random")) {
          // delete the files
          File('$d${path.separator}$f.michelson').deleteSync();
          File('$d${path.separator}$f.micheline').deleteSync();
          print("Deleted more then 1000 $t${path.separator}$f");
          return;
        }

        var michelineObject = jsonDecode(micheline);

        michelineObject.removeWhere((e) => e['prim'] == 'input');
        michelineObject.removeWhere((e) => e['prim'] == 'amount');

        var trimmedMicheline =
            Parser.normalizeMichelineWhiteSpace(jsonEncode(michelineObject));

        try {
          var parsedMichelson = Parser.parseMichelsonScript(michelson);

          parsedMichelson =
              Parser.normalizeMichelineWhiteSpace(parsedMichelson!);

          expect(Dartez.normalizePrimitiveRecordOrder((parsedMichelson)),
              Dartez.normalizePrimitiveRecordOrder((trimmedMicheline)));
        } catch (e) {
          if (d.contains("random")) {
            // delete the files
            File('$d${path.separator}$f.michelson').deleteSync();
            File('$d${path.separator}$f.micheline').deleteSync();
            print("Deleted $t${path.separator}$f");
          }
        }
      });
    }
  });
}
